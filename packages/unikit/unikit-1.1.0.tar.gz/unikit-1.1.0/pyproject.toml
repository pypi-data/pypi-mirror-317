[tool.poetry]
name = "unikit"
version = "1.1.0"
license = "MIT"
description = "A versatile Python library that provides a set of generic classes and utilities for common application needs, including dependency injection, object registries, file system abstraction, string parsing, and many others. Designed to streamline development, UniKit offers reusable tools to simplify building robust and scalable applications."
authors = ["Dmitry Berezovsky <unikit-dev@googlegroups.com>"]
maintainers = ["Dmitry Berezovsky <unikit-dev@googlegroups.com>"]
repository = "https://github.com/corvis/unikit"
keywords = ["toolkit", "core utilities", "dependency injection", "registry", "parsing", "generics", "python tools", "application development", "di"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
readme = "README.md"
packages = [{ include = "unikit", from = "src" }]
exclude = ["src/unikit/**/test_*", "src/unikit/**/tests"]

[tool.poetry.dependencies]
python = ">=3.11,<4"
injector = ">=0.20"
pydantic = ">=1.8.2,<3.0.0"

# Optional dependencies
django = { version = ">=3.0", optional = true }
celery = { version = ">=5.0", optional = true }
django-environ = { version = ">=0.10.0", optional = true }
taskiq = { version = ">=0.11.7", optional = true }
redis = { version = ">=4.0.0", optional = true }
opentelemetry-sdk = { version = ">=1.29.0", optional = true }

[tool.poetry.dev-dependencies]
# Unit tests
coverage = { version = "=6.5", extras = ["toml"] }
pytest = "~=7.2"
pytest-subtests = "~=0.4"
pytest-cov = "~=4.0"
teamcity-messages = ">=1.31"

# Dev tools
black = "~=24.8"
licenseheaders = ">=0.8"
flake8 = "~=7.1.1"
flake8-import-graph = ">=0.1.3"
flake8-docstrings = ">=1.7.0"
isort = "~=5.11"
mypy = ">=1.11.2"
pre-commit = "~=3.8"
commitizen = "~=3.29.0"

# Type checking
types-dateparser = ">=1.1.3"
types-deprecated = ">=1.2.9"

[tool.poetry.extras]
django = ["django", "django-environ"]
celery = ["celery"]
taskiq = ["taskiq"]
redis = ["redis"]
otlp = [
    "opentelemetry-sdk",
]

[tool.commitizen]
version_provider = "poetry"
bump_version = "bump: version $current_version â†’ $new_version"
update_changelog_on_bump = true
pre_bump_hooks = []
version_files = [
    "src/unikit/__version__.py",
]

[tool.black]
line-length = 120
target-version = ['py311']
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.isort]
profile = "black"
line_length = 120
force_sort_within_sections = "true"
atomic = "true"

# Tests and Coverage
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "--maxfail=50"
python_files = ["test_*.py"]
required_plugins = ["pytest-subtests", "pytest-cov"]
testpaths = ["src"]

[tool.coverage.run]
branch = false

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "coverage_report/htmlcov"

[tool.mypy]
python_version = "3.11"
show_error_codes = true
ignore_errors = false
warn_return_any = false
disallow_any_generics = false
warn_unused_ignores = true
pretty = true
strict = true
mypy_path = "$MYPY_CONFIG_FILE_DIR/stubs"
exclude = ["test_.*\\.py$", "test\\.py$"]
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
# External libs which doesn't have type hints (py.typed marker)
module = ["django.*", "celery.*", "environ.*", ]
ignore_missing_imports = true
follow_imports = "skip"
