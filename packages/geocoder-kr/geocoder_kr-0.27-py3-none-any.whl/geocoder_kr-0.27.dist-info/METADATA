Metadata-Version: 2.1
Name: geocoder-kr
Version: 0.27
Summary: Python-based geocoding solution for Korean addresses
Home-page: https://github.com/gisman/geocoder-kr
Author: gisman
Author-email: gisman@gmail.com
License: CC-BY-NC-SA-4.0
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: POSIX :: Linux
Requires-Python: >=3.6, <3.12
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: annotated-types==0.7.0
Requires-Dist: anyio==4.7.0
Requires-Dist: attrs==24.3.0
Requires-Dist: certifi==2024.12.14
Requires-Dist: charset-normalizer==3.4.1
Requires-Dist: click-plugins==1.1.1
Requires-Dist: click==8.1.8
Requires-Dist: cligj==0.7.2
Requires-Dist: environs==11.2.1
Requires-Dist: exceptiongroup==1.2.2
Requires-Dist: fastapi==0.115.6
Requires-Dist: fiona==1.10.1
Requires-Dist: h11==0.14.0
Requires-Dist: idna==3.10
Requires-Dist: polygon-geohasher==0.0.1
Requires-Dist: pydantic==2.10.4
Requires-Dist: pydantic-core==2.27.2
Requires-Dist: pyproj==3.7.0
Requires-Dist: python-geohash==0.8.5
Requires-Dist: requests==2.32.3
Requires-Dist: rocksdb3==0.1.0
Requires-Dist: shapely==2.0.6
Requires-Dist: sniffio==1.3.1
Requires-Dist: starlette==0.41.3
Requires-Dist: twine==6.0.1
Requires-Dist: typing-extensions==4.12.2
Requires-Dist: urllib3==2.3.0
Requires-Dist: uvicorn==0.34.0
Requires-Dist: uvloop==0.21.0

[Ïò®ÎùºÏù∏ Îç∞Î™®!](https://geocode-kr.gimi9.com/) | [ÏÑúÎπÑÏä§ Îç∞Î™®!](https://geocode.gimi9.com/) | [Î¶¨Î≤ÑÏä§ ÏßÄÏò§ÏΩîÎî©Ïóê ÎåÄÌï¥ ÏïÑÏãúÎÇòÏöî?](https://gimi9.com/blog/reverse-geocoding/)

geocoder-krÏùÄ ÌïúÍµ≠ Ï£ºÏÜåÎ•º ÏúÑÌïú Python Í∏∞Î∞ò ÏßÄÏò§ÏΩîÎî© ÏÜîÎ£®ÏÖòÏûÖÎãàÎã§.
Ïù¥ ÏÜîÎ£®ÏÖòÏùÑ ÏÇ¨Ïö©ÌïòÎ©¥ ÌïúÍµ≠Ïùò Ï£ºÏÜåÎ•º ÏßÄÎ¶¨Ï†Å Ï¢åÌëú(ÏúÑÎèÑÏôÄ Í≤ΩÎèÑ)Î°ú Î≥ÄÌôòÌï† Ïàò ÏûàÏäµÎãàÎã§.

# ÌäπÏßï

* ÌïúÍµ≠ Ï£ºÏÜå Ï≤¥Í≥ÑÏóê ÏµúÏ†ÅÌôî
* Îã§ÏñëÌïú Ï£ºÏÜå ÌòïÏãù ÏßÄÏõê (ÎèÑÎ°úÎ™Ö Ï£ºÏÜå, ÏßÄÎ≤à Ï£ºÏÜå)
* ÏßÄÏò§ÏΩîÎî© Î∞è Î¶¨Î≤ÑÏä§ ÏßÄÏò§ÏΩîÎî©
* Îπ†Î•¥Í≥† Ï†ïÌôïÌïú ÏßÄÏò§ÏΩîÎî© Í≤∞Í≥º
* Ïâ¨Ïö¥ ÏÑ§Ïπò
* Í∞ÑÌé∏Ìïú API ÏÇ¨Ïö©
* Îß§Ïö∞ Ï†ÅÏùÄ Î¶¨ÏÜåÏä§ ÏÇ¨Ïö©
* Ï¥àÍ≥†ÏÜç Ï≤òÎ¶¨ ÏÜçÎèÑ
* ÏÖÄÌîÑ Ìò∏Ïä§ÌåÖ Í∞ÄÎä•

![ÏßÄÏò§ÏΩîÎî©](https://github.com/user-attachments/assets/24df3aed-37d4-4c02-8569-42ee471551b9)

# ÏÑ§Ïπò

```bash
pip install geocoder-kr
```

## Îç∞Ïù¥ÌÑ∞ Îã§Ïö¥Î°úÎìú (ÌïÑÏàò)

geocoder-krÏù¥ ÎèôÏûëÌïòÎ†§Î©¥ Îç∞Ïù¥ÌÑ∞ ÌååÏùºÏù¥ ÌïÑÏöîÌï©ÎãàÎã§.

1. [code Îç∞Ïù¥ÌÑ∞ Îã§Ïö¥Î°úÎìú](https://geocode.gimi9.com/static/download/code.tar.gz)

2. [Geocoding Îç∞Ïù¥ÌÑ∞ Îã§Ïö¥Î°úÎìú](https://geocode.gimi9.com/static/download/rocks.tar.gz)

3. [Reverse Geocoding Îç∞Ïù¥ÌÑ∞ Îã§Ïö¥Î°úÎìú](https://geocode.gimi9.com/static/download/rocks-reverse-geocoder.tar.gz)

4. Îã§Ïö¥Î°úÎìúÌïú ÌååÏùºÏùÑ ÌîÑÎ°úÏ†ùÌä∏ ÎîîÎ†âÌÜ†Î¶¨Ïóê Îã§ÏùåÍ≥º Í∞ôÏù¥ Î≥µÏÇ¨ÌïòÏÑ∏Ïöî.

(Ï∞∏Í≥†: ÏïÑÎûòÏùò ÎîîÎ†âÌÜ†Î¶¨ Íµ¨Ï°∞Îäî [tree-view](https://github.com/gisman/tree-view) Ïú†Ìã∏Î¶¨Ìã∞Î•º ÏÇ¨Ïö©ÌïòÏó¨ Ï†úÏûëÎêòÏóàÏäµÎãàÎã§.)
```bash
 üìÇ db                                       [12GB]
    ‚îú‚îÄ‚îÄ üìÇ code                              [64MB 3Í∞úÏùò ÌååÏùº]
    ‚îÇ   ‚îú‚îÄ‚îÄ üìÑ PNU.csv [3MB]
    ‚îÇ   ‚îú‚îÄ‚îÄ üìÑ TN_SPRD_RDNM.txt [62MB]
    ‚îÇ   ‚îî‚îÄ‚îÄ üìÑ h1_h2_code_match.csv [15KB]
    ‚îú‚îÄ‚îÄ üìÇ rocks                             [3GB 336Í∞úÏùò ÌååÏùº]
    ‚îÇ   ‚îú‚îÄ‚îÄ üìÑ 000441.sst [961B]
    ‚îÇ   ‚îú‚îÄ‚îÄ üìÑ 004238.sst [65MB]
    ‚îÇ   ‚îú‚îÄ‚îÄ üìÑ 004239.sst [65MB]
    ‚îÇ   ‚îî‚îÄ‚îÄ üìÑ 004240.sst [65MB]
    ‚îî‚îÄ‚îÄ üìÇ rocks-reverse-geocoder            [9GB 348Í∞úÏùò ÌååÏùº]
        ‚îú‚îÄ‚îÄ üìÑ 005253.sst [65MB]
        ‚îú‚îÄ‚îÄ üìÑ 005254.sst [65MB]
        ‚îú‚îÄ‚îÄ üìÑ 005256.sst [65MB]
        ‚îî‚îÄ‚îÄ üìÑ 005257.sst [65MB]
```

# ÏÇ¨Ïö©Î≤ï (ÎùºÏù¥Î∏åÎü¨Î¶¨)

```python
from geocoder_kr import geocoder, reverse_geocoder

gc = geocoder.Geocoder()
print(gc.search("ÏÑúÏö∏ÌäπÎ≥ÑÏãú ÏÜ°ÌååÍµ¨ Ïû•ÏßÄÎèô 839-5Î≤àÏßÄ"))

rev_gc = reverse_geocoder.ReverseGeocoder()
print(rev_gc.search(127.11609829941841, 37.546857074590875))
```

# ÏÇ¨Ïö©Î≤ï (API ÏÑúÎ≤Ñ)

## Ïã§Ìñâ

```bash
uvicorn --host=0.0.0.0 api_fast:app
```

Ïõπ Î∏åÎùºÏö∞Ï†ÄÎ°ú http://localhost:8000/ Ïóê Ï†ëÏÜçÌïòÎ©¥ API ÏÑúÎπÑÏä§Ïùò Í∏∞Î≥∏ ÌéòÏù¥ÏßÄÍ∞Ä ÌëúÏãúÎê©ÎãàÎã§.


## Simple ÏßÄÏò§ÏΩîÎî©

Request
> [https://geocode-kr.gimi9.com/geocode?q=ÏÑúÏö∏ÌäπÎ≥ÑÏãú ÏÜ°ÌååÍµ¨ ÏÜ°ÌååÎåÄÎ°ú8Í∏∏ 10](https://geocode-kr.gimi9.com/geocode?q=%EC%84%9C%EC%9A%B8%ED%8A%B9%EB%B3%84%EC%8B%9C%20%EC%86%A1%ED%8C%8C%EA%B5%AC%20%EC%86%A1%ED%8C%8C%EB%8C%80%EB%A1%9C8%EA%B8%B8%2010)

Response
```json
{
  "total_time": 0.007039785385131836,
  "total_count": 1,
  "success_count": 1,
  "fail_count": 0,
  "results": [
    {
      "x": 967118,
      "y": 1942008,
      "z": "05813",
      "hc": "1171064600",
      "lc": "1171010900",
      "rc": "117104169355",
      "bn": "1171010900102530005000001",
      "h1": "ÏÑúÏö∏",
      "rm": "ÏÜ°ÌååÎåÄÎ°ú8Í∏∏",
      "bm": [
        "ÏÜ°ÌååÌååÏù∏13",
        "ÏÜ°ÌååÌååÏù∏13",
        ""
      ],
      "success": true,
      "errmsg": "",
      "h1_cd": "11",
      "h2_cd": "11710",
      "kostat_h1_cd": "11",
      "kostat_h2_cd": "11240",
      "hash": "ÏÜ°Ìåå_ÏÜ°ÌååÎåÄÎ°ú8Í∏∏_10-0",
      "address": "ÏÑúÏö∏ÌäπÎ≥ÑÏãú ÏÜ°ÌååÍµ¨ ÏÜ°ÌååÎåÄÎ°ú8Í∏∏ 10",
      "addressCls": "ROAD_ADDRESS",
      "toksString": "H1\tÏÑúÏö∏ÌäπÎ≥ÑÏãú\nH23\tÏÜ°ÌååÍµ¨\nROAD\tÏÜ°ÌååÎåÄÎ°ú8Í∏∏\nÍ±¥Î≤à\t10",
      "x_axis": 127.12810603742214,
      "y_axis": 37.476715383128074,
      "inputaddr": "ÏÑúÏö∏ÌäπÎ≥ÑÏãú ÏÜ°ÌååÍµ¨ ÏÜ°ÌååÎåÄÎ°ú8Í∏∏ 10"
    }
  ]
}
```


## Ïó¨Îü¨ Í∞úÏùò Ï£ºÏÜå ÏßÄÏò§ÏΩîÎî©

Ïó¨Îü¨ Ï£ºÏÜåÎ•º Ìïú Î≤àÏóê ÏßÄÏò§ÏΩîÎî©ÌïòÎäî Î∞©Î≤ïÏùÄ Í∞ÑÎã®Ìï©ÎãàÎã§. Í∞Å Ï£ºÏÜåÎ•º Î∞∞Ïó¥Ïóê ÎÑ£Í≥† POSTÎ°ú ÏöîÏ≤≠ÌïòÏÑ∏Ïöî.

### curl Ïòà

```bash
curl -X 'POST' \
  'https://geocode-kr.gimi9.com/batch_geocode' \
  -H 'accept: application/json' \
  -H 'Content-Type: application/json' \
  -d '{
  "q": [
    "ÏÑúÏö∏ÌäπÎ≥ÑÏãú ÏÜ°ÌååÍµ¨ ÏÜ°ÌååÎåÄÎ°ú8Í∏∏ 10",
    "ÏÑúÏö∏ÌäπÎ≥ÑÏãú ÏÜ°ÌååÍµ¨ ÏñëÏû¨ÎåÄÎ°ú72Í∏∏ 20",
    "ÏÑúÏö∏ÌäπÎ≥ÑÏãú Íµ¨Î°úÍµ¨ Í≥†Ï≤ôÎ°ú21ÎÇòÍ∏∏ 85-6",
    "ÏÑúÏö∏ÌäπÎ≥ÑÏãú ÎÖ∏ÏõêÍµ¨ ÏõîÍ≥ÑÎ°ú53Í∏∏ 21",
    "ÏÑúÏö∏ÌäπÎ≥ÑÏãú ÏÑúÏ¥àÍµ¨ Î∞îÏö∞Î´ºÎ°ú 91"
  ]
}'
```

### python Ïòà

```python
import requests

url = 'https://geocode-kr.gimi9.com/batch_geocode'
headers = {
  'accept': 'application/json',
}
data = {
  "q": [
    "ÏÑúÏö∏ÌäπÎ≥ÑÏãú ÏÜ°ÌååÍµ¨ ÏÜ°ÌååÎåÄÎ°ú8Í∏∏ 10",
    "ÏÑúÏö∏ÌäπÎ≥ÑÏãú ÏÜ°ÌååÍµ¨ ÏñëÏû¨ÎåÄÎ°ú72Í∏∏ 20",
    "ÏÑúÏö∏ÌäπÎ≥ÑÏãú Íµ¨Î°úÍµ¨ Í≥†Ï≤ôÎ°ú21ÎÇòÍ∏∏ 85-6",
    "ÏÑúÏö∏ÌäπÎ≥ÑÏãú ÎÖ∏ÏõêÍµ¨ ÏõîÍ≥ÑÎ°ú53Í∏∏ 21",
    "ÏÑúÏö∏ÌäπÎ≥ÑÏãú ÏÑúÏ¥àÍµ¨ Î∞îÏö∞Î´ºÎ°ú 91"
  ]
}

response = requests.post(url, headers=headers, json=data)
print(response.json())
```

### javascript Ïòà

```javascript
const axios = require('axios');

const url = 'https://geocode-kr.gimi9.com/batch_geocode';
const headers = {
  'accept': 'application/json',
};
const data = {
  q: [
    "ÏÑúÏö∏ÌäπÎ≥ÑÏãú ÏÜ°ÌååÍµ¨ ÏÜ°ÌååÎåÄÎ°ú8Í∏∏ 10",
    "ÏÑúÏö∏ÌäπÎ≥ÑÏãú ÏÜ°ÌååÍµ¨ ÏñëÏû¨ÎåÄÎ°ú72Í∏∏ 20",
    "ÏÑúÏö∏ÌäπÎ≥ÑÏãú Íµ¨Î°úÍµ¨ Í≥†Ï≤ôÎ°ú21ÎÇòÍ∏∏ 85-6",
    "ÏÑúÏö∏ÌäπÎ≥ÑÏãú ÎÖ∏ÏõêÍµ¨ ÏõîÍ≥ÑÎ°ú53Í∏∏ 21",
    "ÏÑúÏö∏ÌäπÎ≥ÑÏãú ÏÑúÏ¥àÍµ¨ Î∞îÏö∞Î´ºÎ°ú 91"
  ]
};

axios.post(url, data, { headers })
  .then(response => {
    console.log(response.data);
  })
  .catch(error => {
    console.error('Error:', error);
  });
```

### Response

```json
{
  "total_time": 0.008105278015136719,
  "total_count": 5,
  "success_count": 5,
  "fail_count": 0,
  "results": [
    {
      "x": 967118,
      "y": 1942008,
      "z": "05813",
      "hc": "1171064600",
      "lc": "1171010900",
      "rc": "117104169355",
      "bn": "1171010900102530005000001",
      "h1": "ÏÑúÏö∏",
      "rm": "ÏÜ°ÌååÎåÄÎ°ú8Í∏∏",
      "bm": [
        "ÏÜ°ÌååÌååÏù∏13",
        "ÏÜ°ÌååÌååÏù∏13",
        ""
      ],
      "success": true,
      "errmsg": "",
      "h1_cd": "11",
      "h2_cd": "11710",
      "kostat_h1_cd": "11",
      "kostat_h2_cd": "11240",
      "hash": "ÏÜ°Ìåå_ÏÜ°ÌååÎåÄÎ°ú8Í∏∏_10-0",
      "address": "ÏÑúÏö∏ÌäπÎ≥ÑÏãú ÏÜ°ÌååÍµ¨ ÏÜ°ÌååÎåÄÎ°ú8Í∏∏ 10",
      "addressCls": "ROAD_ADDRESS",
      "toksString": "H1\tÏÑúÏö∏ÌäπÎ≥ÑÏãú\nH23\tÏÜ°ÌååÍµ¨\nROAD\tÏÜ°ÌååÎåÄÎ°ú8Í∏∏\nÍ±¥Î≤à\t10",
      "x_axis": 127.12810603742214,
      "y_axis": 37.476715383128074,
      "inputaddr": "ÏÑúÏö∏ÌäπÎ≥ÑÏãú ÏÜ°ÌååÍµ¨ ÏÜ°ÌååÎåÄÎ°ú8Í∏∏ 10"
    },
ÏÉùÎûµ...
  ]
}
```

## Î¶¨Î≤ÑÏä§ ÏßÄÏò§ÏΩîÎî©

Ï¢åÌëú(ÏúÑÎèÑÏôÄ Í≤ΩÎèÑ)Ïóê Ìï¥ÎãπÌïòÎäî Ï£ºÏÜåÎ•º Ï∞æÏäµÎãàÎã§.

![image](https://github.com/user-attachments/assets/9da15c87-0cfa-43c1-a353-8712d1efbea7)


### Request

> https://geocode-kr.gimi9.com/reverse_geocode/?x=127.12771948485866&y=37.47699735340699

### Response

```json
{
"PNU": "1171010900108390005",
"yyyymm": "202404",
"address": "ÏÑúÏö∏ÌäπÎ≥ÑÏãú ÏÜ°ÌååÍµ¨ Ïû•ÏßÄÎèô 839-5Î≤àÏßÄ",
"success": true,
"geom": "POLYGON ((127.127924 37.476489, 127.127981 37.476459, 127.127644 37.476489, 127.127639 37.476490, 127.127685 37.476530, 127.127651 37.476725, 127.127651 37.476726, 127.127613 37.476939, 127.127612 37.476946, 127.127607 37.476976, 127.127584 37.477093, 127.127569 37.477158, 127.127557 37.477209, 127.127525 37.477325, 127.127511 37.477371, 127.127510 37.477375, 127.127490 37.477440, 127.127449 37.477554, 127.127438 37.477583, 127.127435 37.477590, 127.127405 37.477667, 127.127356 37.477778, 127.127349 37.477794, 127.127351 37.477794, 127.127351 37.477794, 127.127313 37.477872, 127.127279 37.477941, 127.127186 37.478126, 127.127133 37.478232, 127.127097 37.478309, 127.127081 37.478346, 127.127051 37.478415, 127.127016 37.478499, 127.126984 37.478585, 127.126954 37.478673, 127.126929 37.478752, 127.126923 37.478768, 127.126898 37.478856, 127.126875 37.478944, 127.126852 37.479042, 127.126821 37.479206, 127.126785 37.479442, 127.126692 37.479489, 127.127058 37.479583, 127.127005 37.479503, 127.127033 37.479300, 127.127047 37.479210, 127.127059 37.479147, 127.127071 37.479088, 127.127085 37.479023, 127.127100 37.478961, 127.127117 37.478899, 127.127134 37.478838, 127.127152 37.478777, 127.127173 37.478715, 127.127193 37.478655, 127.127216 37.478594, 127.127239 37.478534, 127.127268 37.478466, 127.127298 37.478398, 127.127331 37.478328, 127.127446 37.478168, 127.127571 37.477916, 127.127598 37.477781, 127.127645 37.477667, 127.127709 37.477494, 127.127839 37.477158, 127.127877 37.476951, 127.127862 37.476840, 127.127914 37.476550, 127.127924 37.476489))",
"errmsg": ""
}
```

## /docs

RESTful APIÎ•º ÏÑ§Í≥Ñ, Î¨∏ÏÑúÌôî, ÌÖåÏä§Ìä∏ÌïòÍ∏∞ ÏúÑÌïú [Swagger](https://swagger.io/) Í∏∞Î∞òÏùò ÎèÑÍµ¨Î•º Ï†úÍ≥µÌï©ÎãàÎã§.

[Ïò®ÎùºÏù∏ Î¨∏ÏÑú](https://geocode-kr.gimi9.com/docs#/)

![image](https://github.com/user-attachments/assets/034b7c7f-6a3b-4c15-a454-7da784ef94df)


## Ï£ºÏùòÏÇ¨Ìï≠

Ïù¥ ÏÜîÎ£®ÏÖòÏùÄ ÌïúÍµ≠ Ï£ºÏÜåÏóê ÌäπÌôîÎêòÏñ¥ ÏûàÏúºÎØÄÎ°ú Ìï¥Ïô∏ Ï£ºÏÜåÏóêÎäî ÏÇ¨Ïö©Ìï† Ïàò ÏóÜÏäµÎãàÎã§.

Ï†ïÌôïÌïú Í≤∞Í≥ºÎ•º ÏúÑÌï¥ Í∞ÄÎä•Ìïú Ìïú ÏÉÅÏÑ∏Ìïú Ï£ºÏÜåÎ•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî.

## ÏûêÏ£º Î¨ªÎäî ÏßàÎ¨∏

### geocode-kr.gimi9.comÏùò API ÏÑúÎ≤ÑÎ•º ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎÇòÏöî?

Í∑∏Î†áÏäµÎãàÎã§. ÌïòÏßÄÎßå Í≥ÑÏïΩÏùÑ Ìï¥Ïïº Ìï©ÎãàÎã§. gisman@gmail.comÏúºÎ°ú Î¨∏ÏùòÌï¥ Ï£ºÏÑ∏Ïöî.

### Îç∞Ïù¥ÌÑ∞ ÏóÖÎç∞Ïù¥Ìä∏Îäî ÏñºÎßàÎÇò ÏûêÏ£º ÌïòÎÇòÏöî?

Îß§Ïùº Ìï©ÎãàÎã§. Í∑∏Î¶¨Í≥† geocode.gimi9.comÏóê Ï†ÅÏö©Ìï©ÎãàÎã§.

Îã§Ïö¥Î°úÎìú ÌååÏùºÏùÄ ÎπÑÏ†ïÍ∏∞Ï†ÅÏúºÎ°ú Î∞∞Ìè¨Ìï©ÎãàÎã§.

### Ïñ¥Îñ§ Îç∞Ïù¥ÌÑ∞Î•º ÏÇ¨Ïö©ÌïòÎÇòÏöî?

ÏßÄÏò§ÏΩîÎî©ÏùÄ [Ï£ºÏÜåÏ†ïÎ≥¥ ÎàÑÎ¶¨Ïßë](https://www.juso.go.kr/)Ïùò Ïó¨Îü¨ Í≥µÍ≥µÎç∞Ïù¥ÌÑ∞Î•º ÏÇ¨Ïö©Ìï©ÎãàÎã§.

Î¶¨Î≤ÑÏä§ ÏßÄÏò§ÏΩîÎî©ÏùÄ [Î∏åÏù¥ÏõîÎìú](https://gimi9.com/organization/vworld/)Ïùò Ïó∞ÏÜçÏßÄÏ†ÅÎèÑÏôÄ Í±¥Î¨ºÎèÑÌòï Í≥µÍ≥µÎç∞Ïù¥ÌÑ∞Î•º ÏÇ¨Ïö©Ìï©ÎãàÎã§.

### Ï≤òÎ¶¨ ÏÜçÎèÑÎäî ÏñºÎßàÎÇò Îπ†Î•∏Í∞ÄÏöî?

ÏßÄÏò§ÏΩîÎî© ÏÜçÎèÑÎäî Ï¥àÎãπ 3Ï≤ú Í±¥ Ïù¥ÏÉÅÏù¥Î©∞, Î¶¨Î≤ÑÏä§ ÏßÄÏò§ÏΩîÎî©ÎèÑ ÎπÑÏä∑Ìïú ÏÜçÎèÑÎ•º Î≥¥ÏûÖÎãàÎã§.

Í∏∞Î≥∏Ï†ÅÏúºÎ°ú ÎπÑÎèôÍ∏∞ Ï≤òÎ¶¨Î•º ÏÇ¨Ïö©ÌïòÎ©∞, Uvicorn ÏÑúÎ≤ÑÏùò ÏõåÏª§ ÏàòÎ•º Ï°∞Ï†ïÌïòÏó¨ ÎèôÏãúÏóê Ï≤òÎ¶¨Ìï† Ïàò ÏûàÎäî ÏöîÏ≤≠ ÏàòÎ•º ÎäòÎ¶¥ Ïàò ÏûàÏäµÎãàÎã§.

### ÏÑúÎ≤ÑÏùò Í∂åÏû• ÏÇ¨ÏñëÏùÄ?

CPUÏôÄ Î©îÎ™®Î¶¨Îäî AWS EC2 t2.micro (1 vCPU, 1GiB Î©îÎ™®Î¶¨) ÏàòÏ§ÄÏù¥Î©¥ Ï∂©Î∂ÑÌï©ÎãàÎã§.

Ï†ÄÏû• Ïû•ÏπòÎäî SSDÎ•º Í∂åÏû•Ìï©ÎãàÎã§.

Ïö¥ÏòÅ ÌôòÍ≤ΩÏóêÏÑúÎäî 4GB Ïù¥ÏÉÅÏùò RAMÏùÑ Í∂åÏû•Ìï©ÎãàÎã§.

## Í∏∞Ïó¨

Í∏∞Ïó¨Î•º ÌôòÏòÅÌï©ÎãàÎã§! GitHub Ï†ÄÏû•ÏÜåÎ•º Ìè¨ÌÅ¨ÌïòÍ≥† ÌíÄ Î¶¨ÌÄòÏä§Ìä∏Î•º Î≥¥ÎÇ¥Ï£ºÏÑ∏Ïöî. Î≤ÑÍ∑∏ Î¶¨Ìè¨Ìä∏, Í∏∞Îä• Ï†úÏïà, Î¨∏ÏÑú Í∞úÏÑ† Îì± Î™®Îì† Ï¢ÖÎ•òÏùò Í∏∞Ïó¨Î•º ÌôòÏòÅÌï©ÎãàÎã§.

ÏßÄÏò§ÏΩîÎî©Ïù¥ Ïïà ÎêòÎäî Ï£ºÏÜåÍ∞Ä ÏûàÏúºÎ©¥ ÏïåÎ†§Ï£ºÏÑ∏Ïöî.

## ÏßÄÏõê Î∞è Î¨∏Ïùò

Î¨∏Ï†úÍ∞Ä Î∞úÏÉùÌïòÍ±∞ÎÇò ÏßàÎ¨∏Ïù¥ ÏûàÏúºÏãúÎ©¥ GitHub Ïù¥ÏäàÎ•º ÌÜµÌï¥ Î¨∏ÏùòÌï¥ Ï£ºÏÑ∏Ïöî.

Îπ†Î•¥Í≤å ÎãµÏùÑ ÏñªÏúºÎ†§Î©¥ [Ïπ¥ÌÜ° Ïò§ÌîàÏ±ÑÌåÖ](https://open.kakao.com/o/gNplQr7f)ÏúºÎ°ú Î¨∏ÏùòÌï¥Ï£ºÏÑ∏Ïöî. 

## ÌÅ¨Î†àÎîß

* [MetaÏùò RocksDB](https://github.com/facebook/rocksdb)Î•º Ïù¥Ïö©ÌïòÏó¨ Í∞ÑÎã®Ìïú Íµ¨Ï°∞ÏôÄ Îπ†Î•∏ ÏÑ±Îä•ÏùÑ ÏñªÏùÑ Ïàò ÏûàÏóàÏäµÎãàÎã§.

## ÏÉÅÏóÖÏ†Å Ïù¥Ïö©

ÏÉÅÏóÖÏ†Å Ïù¥Ïö©ÏùÄ ÏóÑÍ≤©Ìûà Í∏àÏßÄÎê©ÎãàÎã§. ÏÉÅÏóÖÏ†ÅÏúºÎ°ú ÏÇ¨Ïö©ÌïòÎ†§Î©¥ gisman@gmail.com ÏúºÎ°ú Î¨∏ÏùòÌï¥ Ï£ºÏÑ∏Ïöî.

Îã§ÏùåÍ≥º Í∞ôÏùÄ Í≤ΩÏö∞ ÏûêÏú†Î°≠Í≤å ÏÇ¨Ïö©Ìï† Ïàò ÏûàÏäµÎãàÎã§. 

* Í∞úÏù∏Ï†Å ÏÇ¨Ïö©: Í∞úÏù∏Ïù¥ ÎπÑÏòÅÎ¶¨ Î™©Ï†ÅÏúºÎ°ú ÏÜåÌîÑÌä∏Ïõ®Ïñ¥Î•º ÏÇ¨Ïö©ÌïòÎäî Í≤ΩÏö∞
* ÍµêÏú° Î™©Ï†Å: ÌïôÍµê, ÎåÄÌïô Îì± ÍµêÏú° Í∏∞Í¥ÄÏóêÏÑú ÌïôÏäµ Î∞è Ïó∞Íµ¨ Î™©Ï†ÅÏúºÎ°ú ÏÇ¨Ïö©ÌïòÎäî Í≤ΩÏö∞
* ÎπÑÏòÅÎ¶¨ Îã®Ï≤¥: ÏûêÏÑ† Îã®Ï≤¥ÎÇò NGO Îì±Ïù¥ Í∑∏Îì§Ïùò ÎØ∏ÏÖòÏùÑ ÏàòÌñâÌïòÍ∏∞ ÏúÑÌï¥ ÏÇ¨Ïö©ÌïòÎäî Í≤ΩÏö∞
* Ïò§ÌîàÏÜåÏä§ ÌîÑÎ°úÏ†ùÌä∏: Îã§Î•∏ ÎπÑÏÉÅÏóÖÏ†Å Ïò§ÌîàÏÜåÏä§ ÌîÑÎ°úÏ†ùÌä∏ÏóêÏÑú Ìï¥Îãπ ÏÜîÎ£®ÏÖòÏùÑ ÌôúÏö©ÌïòÎäî Í≤ΩÏö∞
* Ï†ïÎ∂Ä Í∏∞Í¥Ä: Í≥µÍ≥µ ÏÑúÎπÑÏä§ Ï†úÍ≥µÏùÑ ÏúÑÌï¥ Ï†ïÎ∂Ä Í∏∞Í¥ÄÏóêÏÑú ÏÇ¨Ïö©ÌïòÎäî Í≤ΩÏö∞
* ÌïôÏà† Ïó∞Íµ¨: ÎåÄÌïôÏù¥ÎÇò Ïó∞Íµ¨ÏÜåÏóêÏÑú ÏàúÏàò ÌïôÏà† Î™©Ï†ÅÏúºÎ°ú ÏÇ¨Ïö©ÌïòÎäî Í≤ΩÏö∞

ÏûêÏÑ∏Ìïú ÎÇ¥Ïö©ÏùÄ [LICENSE](LICENSE) ÌååÏùºÏùÑ Ï∞∏Ï°∞ÌïòÏãúÍ∏∞ Î∞îÎûçÎãàÎã§.



