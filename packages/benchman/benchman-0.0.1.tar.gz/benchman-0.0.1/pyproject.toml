[project]
name = "benchman"
version = "0.0.1"
description = "Generate and analyze micro benchmarks"
keywords = [
  "benchmark", "micro benchmark", "performance", "analysis", "reporting"
 ]
authors = [
    { name = "Martin Wendt", email = "benchman@wwwendt.de" }
]
license = "MIT"
readme = "README.md"
requires-python = ">=3.9"

dependencies = [
    "build>=1.2.2.post1",
    # "pandas>=2.2.3",
    "psutil>=6.1.0",
    "snazzy>=0.2.2",
    "tablib[cli]>=3.7.0",
    "toml>=0.10.2",
    "typing-extensions>=4.12.2",
]

[dependency-groups]
dev = [
    "ipykernel>=6.29.5",
    "mypy>=1.13.0",
    "notebook>=7.2.2",
    "pyright>=1.1.390",
    "pytest-cov>=6.0.0",
    "pytest-html>=4.1.1",
    "pytest>=8.3.3",
    "tox-uv>=1.16.0",
    "tox>=4.23.2",
    "yabs>=0.6.1",
]

[project.scripts]
benchman = "benchman.cli:run"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# --- Ruff Settings ------------------------------------------------------------
[tool.ruff]
target-version = "py39"
src = ["benchman", "tests"]

[tool.ruff.lint]
select = [
  "B",  # bugbear
  "E",  # pycodestyle
  "F",  # pyflakes
  "G",  # flake8-logging-format
  "I",  # isort
  "UP", # pyupgrade
  "T",  # print, ...
  # "D",   # pydocstyle
]
ignore = [
  # We need the old syntax for python <= 3.9
  "UP006", # Use `list` instead of `List` for type annotations (since Py39)
  "UP007", # Use `X | Y` for type annotations (since Py310)
  "E721",  # Do not compare types, use `isinstance()`
  "G004",  # Logging statement uses f-string
]

[tool.ruff.lint.per-file-ignores]
"*.ipynb" = [  # Jupyter Notebooks
  "T20",  # print statement
  "E402",  # module level import not at top of file
]

# [tool.ruff.lint.isort]
# case-sensitive = true

# [tool.ruff.pydocstyle]
# convention = "google"

# # --- Pyright Settings ---------------------------------------------------------
#! Use .vscode/setttings.json instead
# [tool.pyright]
# autoSearchPaths = true
# indexing= true
# extraPaths = ["src", "tests"]
# typeCheckingMode = "standard"
# reportMissingImports = "none"
# include = ["/Users/martin/prj/git/benchman_pre/src", "tests"]
# logLevel = "Trace"

# # https://github.com/microsoft/pyright/blob/main/docs/configuration.md#sample-pyprojecttoml-file
# reportUnnecessaryTypeIgnoreComment = true

# --- Mypy Settings ------------------------------------------------------------
[tool.mypy]
warn_return_any = true
warn_unused_configs = true
# warn_unused_ignores = true
# warn_redundant_casts = true
# ignore_missing_imports = true
[[tool.mypy.overrides]]
module = [
    # "click",
    "build.util",
    "pytest",
    "psutil",
    "setuptools.config",
    "snazzy",
    "tablib",
    "toml",
]
ignore_missing_imports = true
# ignore_missing_module_source = true

# --- Pytest and Coverage Settings ---------------------------------------------
[tool.pytest.ini_options]
# Required for pytest / coverage  to find the package in tox
pythonpath = "src"

addopts = "-ra -q --cov=benchman"
# addopts = "-ra -q --cov=src"
# addopts = "--cov=benchman --cov-report=html --cov-report=term-missing"


[tool.coverage.run]
# branch = true
omit = [
    "tests/*",
    # "setup.py",
]
# debug = ["dataop","pathmap"]
