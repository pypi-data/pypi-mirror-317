Metadata-Version: 2.1
Name: python-analyst-utility
Version: 0.1.8
Summary: A utility package for analysts with Pandas, Excel, CSV helpers and more.
Home-page: https://github.com/AroshaJ/python-analyst-utility
Author: Rosh Jayawardena
Author-email: rosh.jayawardena@gmail.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: certifi>=2024.12.14
Requires-Dist: charset-normalizer>=3.4.0
Requires-Dist: et_xmlfile>=2.0.0
Requires-Dist: idna>=3.10
Requires-Dist: numpy>=2.2.1
Requires-Dist: openpyxl>=3.1.5
Requires-Dist: packaging>=24.2
Requires-Dist: pandas>=2.2.3
Requires-Dist: python-dateutil>=2.9.0.post0
Requires-Dist: pytz>=2024.2
Requires-Dist: requests>=2.32.3
Requires-Dist: urllib3>=2.3.0
Requires-Dist: xlwings>=0.33.5
Provides-Extra: dev
Requires-Dist: pytest>=8.3.4; extra == "dev"
Requires-Dist: pytest-mock>=3.14.0; extra == "dev"
Requires-Dist: twine>=6.0.1; extra == "dev"
Requires-Dist: readme_renderer>=44.0; extra == "dev"
Requires-Dist: pkginfo>=1.12.0; extra == "dev"
Requires-Dist: keyring>=25.5.0; extra == "dev"
Requires-Dist: rich>=13.9.4; extra == "dev"

# python-analyst-utility

A Python package providing streamlined tools for analysts, including Pandas wrappers, Excel and CSV helpers, and file management utilities. Simplify common tasks and boost productivity with this all-in-one utility package.

## Features

- üìä Enhanced Pandas functionality with intuitive wrappers
- üìë Simplified Excel and CSV file handling
- üóÇÔ∏è File management utilities for common analyst tasks
- ‚ö° Performance-optimized data operations
- üîß Easy-to-use API for common data analysis tasks

## Installation

Install using pip:

```bash
pip install python-analyst-utility
```

## Quick Start

```python
from analyst_utility import excel, pandas_helper

# Example: Reading an Excel file with enhanced features
df = excel.read_excel("data.xlsx", sheet_name="Sheet1")

# Example: Using pandas helper functions
cleaned_df = pandas_helper.clean_column_names(df)
```

## Documentation

### Excel Module

```python
# Read Excel files with additional options
excel.read_excel(filename, sheet_name="Sheet1", headers=True)
# Write to Excel with formatting
excel.write_excel(df, filename, sheet_name="Output")
```

### Pandas Helper Module

```python
# Clean column names
pandas_helper.clean_column_names(df)
# Quick data quality check
pandas_helper.check_data_quality(df)
```

## Building The Package

Build the package using:

```bash
python setup.py sdist bdist_wheel
```

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request.

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Support

For support, please open an issue in the GitHub repository.

## Changelog

### Version 1.0.0
- Initial release
- Basic Excel and CSV functionality
- Pandas helper functions
- File management utilities

---
