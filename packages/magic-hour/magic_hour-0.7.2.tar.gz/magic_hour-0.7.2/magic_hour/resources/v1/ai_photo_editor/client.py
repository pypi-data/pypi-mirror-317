"""
Generated by Sideko (sideko.dev)
"""

import typing

from magic_hour.core import (
    AsyncBaseClient,
    RequestOptions,
    SyncBaseClient,
    default_request_options,
    to_encodable,
    type_utils,
)
from magic_hour.types import models, params


class AiPhotoEditorClient:
    def __init__(self, *, base_client: SyncBaseClient):
        self._base_client = base_client

    def create(
        self,
        *,
        assets: params.PostV1AiPhotoEditorBodyAssets,
        resolution: int,
        style: params.PostV1AiPhotoEditorBodyStyle,
        name: typing.Union[
            typing.Optional[str], type_utils.NOT_GIVEN
        ] = type_utils.NOT_GIVEN,
        steps: typing.Union[
            typing.Optional[int], type_utils.NOT_GIVEN
        ] = type_utils.NOT_GIVEN,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.PostV1AiPhotoEditorResponse:
        """
        > **NOTE**: this API is still in early development stages, and should be avoided. Please reach out to us if you're interested in this API.

        Edit photo using AI. Each photo costs 10 frames.

        POST /v1/ai-photo-editor
        """
        _json = to_encodable(
            item={
                "name": name,
                "steps": steps,
                "assets": assets,
                "resolution": resolution,
                "style": style,
            },
            dump_with=params._SerializerPostV1AiPhotoEditorBody,
        )
        return self._base_client.request(
            method="POST",
            path="/v1/ai-photo-editor",
            auth_names=["bearerAuth"],
            json=_json,
            cast_to=models.PostV1AiPhotoEditorResponse,
            request_options=request_options or default_request_options(),
        )


class AsyncAiPhotoEditorClient:
    def __init__(self, *, base_client: AsyncBaseClient):
        self._base_client = base_client

    async def create(
        self,
        *,
        assets: params.PostV1AiPhotoEditorBodyAssets,
        resolution: int,
        style: params.PostV1AiPhotoEditorBodyStyle,
        name: typing.Union[
            typing.Optional[str], type_utils.NOT_GIVEN
        ] = type_utils.NOT_GIVEN,
        steps: typing.Union[
            typing.Optional[int], type_utils.NOT_GIVEN
        ] = type_utils.NOT_GIVEN,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.PostV1AiPhotoEditorResponse:
        """
        > **NOTE**: this API is still in early development stages, and should be avoided. Please reach out to us if you're interested in this API.

        Edit photo using AI. Each photo costs 10 frames.

        POST /v1/ai-photo-editor
        """
        _json = to_encodable(
            item={
                "name": name,
                "steps": steps,
                "assets": assets,
                "resolution": resolution,
                "style": style,
            },
            dump_with=params._SerializerPostV1AiPhotoEditorBody,
        )
        return await self._base_client.request(
            method="POST",
            path="/v1/ai-photo-editor",
            auth_names=["bearerAuth"],
            json=_json,
            cast_to=models.PostV1AiPhotoEditorResponse,
            request_options=request_options or default_request_options(),
        )
