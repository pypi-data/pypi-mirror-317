[build-system]
requires = ["flit_core>=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "feed2fedi"
description = "Makes posts to Fediverse from one or more feeds"
readme = "README.rst"
authors = [
    {name = "marvin8", email = "marvin8@tuta.io"},
]
requires-python = ">=3.9,<3.13"
license = {text = "AGPL-3.0-or-later"}
version = "3.1.2"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Console",
  "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]

dependencies = [
    "aiosqlite~=0.20.0",
    "beautifulsoup4~=4.12.3",
    "brotli>=1.1.0",
    "certifi>=2024.12.14",
    "feedparser~=6.0.11",
    "h2~=4.1.0",
    "httpx~=0.28.1",
    "markdownify~=0.14.1",
    "minimal-activitypub~=1.3.1",
    "msgspec~=0.18.6",
    "puremagic~=1.28",
    "pycryptodomex~=3.21.0",
    "requests>=2.32.3",
    "stamina~=24.3.0",
    "typer~=0.15.1",
    "websockets>=14.1",
    "yt-dlp~=2024.12.23",
]

[project.scripts]
feed2fedi = "feed2fedi.app:start_main"
feed2fedi_import_cache = "feed2fedi.app:start_import"
feed2fedi_convert_config = "feed2fedi.utils:start_conversion"

[project.urls]
Issues = "https://codeberg.org/MarvinsMastodonTools/feed2fedi/issues"
Source = "https://codeberg.org/MarvinsMastodonTools/feed2fedi"
Changelog = "https://codeberg.org/MarvinsMastodonTools/feed2fedi/src/branch/main/CHANGELOG.rst"

[tool.interrogate]
ignore-init-method = true
ignore-init-module = false
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = false
ignore-nested-functions = false
ignore-nested-classes = true
ignore-setters = false
fail-under = 95
exclude = ["setup.py", "docs", "build", "tests"]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
# possible values: 0 (minimal output), 1 (-v), 2 (-vv)
verbose = 2
quiet = false
whitelist-regex = []
color = true
omit-covered-files = false
generate-badge = "."
badge-format = "svg"

[tool.mypy]
mypy_path = "src"
check_untyped_defs = true
disallow_any_generics = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
no_implicit_reexport = true

[tool.pytest.ini_options]
testpaths = [
"tests",
]

[tool.scriv]
categories = "Breaking, Added, Changed, Deprecated, Removed, Fixed, Security"
format = "rst"
version = "literal: pyproject.toml: project.version"

[dependency-groups]
dev = []
nox = [
    "nox>=2024.10.9",
]
pytest = [
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
]
