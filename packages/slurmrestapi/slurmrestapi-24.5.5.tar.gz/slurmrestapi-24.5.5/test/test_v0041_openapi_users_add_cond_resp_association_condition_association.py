# coding: utf-8

"""
    Slurm REST API

    API to access and control Slurm

    The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from slurmrestapi.models.v0041_openapi_users_add_cond_resp_association_condition_association import V0041OpenapiUsersAddCondRespAssociationConditionAssociation

class TestV0041OpenapiUsersAddCondRespAssociationConditionAssociation(unittest.TestCase):
    """V0041OpenapiUsersAddCondRespAssociationConditionAssociation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0041OpenapiUsersAddCondRespAssociationConditionAssociation:
        """Test V0041OpenapiUsersAddCondRespAssociationConditionAssociation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V0041OpenapiUsersAddCondRespAssociationConditionAssociation`
        """
        model = V0041OpenapiUsersAddCondRespAssociationConditionAssociation()
        if include_optional:
            return V0041OpenapiUsersAddCondRespAssociationConditionAssociation(
                comment = '',
                defaultqos = '',
                grpjobs = slurmrestapi.models.v0_0_41_openapi_users_add_cond_resp_association_condition_association_grpjobs.v0_0_41_openapi_users_add_cond_resp_association_condition_association_grpjobs(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                grpjobsaccrue = slurmrestapi.models.v0_0_41_openapi_users_add_cond_resp_association_condition_association_grpjobsaccrue.v0_0_41_openapi_users_add_cond_resp_association_condition_association_grpjobsaccrue(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                grpsubmitjobs = slurmrestapi.models.v0_0_41_openapi_users_add_cond_resp_association_condition_association_grpsubmitjobs.v0_0_41_openapi_users_add_cond_resp_association_condition_association_grpsubmitjobs(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                grptres = [
                    slurmrestapi.models.v0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner.v0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner(
                        type = '', 
                        name = '', 
                        id = 56, 
                        count = 56, )
                    ],
                grptresmins = [
                    slurmrestapi.models.v0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner.v0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner(
                        type = '', 
                        name = '', 
                        id = 56, 
                        count = 56, )
                    ],
                grptresrunmins = [
                    slurmrestapi.models.v0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner.v0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner(
                        type = '', 
                        name = '', 
                        id = 56, 
                        count = 56, )
                    ],
                grpwall = slurmrestapi.models.v0_0_41_openapi_users_add_cond_resp_association_condition_association_grpwall.v0_0_41_openapi_users_add_cond_resp_association_condition_association_grpwall(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                maxjobs = slurmrestapi.models.v0_0_41_openapi_users_add_cond_resp_association_condition_association_maxjobs.v0_0_41_openapi_users_add_cond_resp_association_condition_association_maxjobs(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                maxjobsaccrue = slurmrestapi.models.v0_0_41_openapi_users_add_cond_resp_association_condition_association_maxjobsaccrue.v0_0_41_openapi_users_add_cond_resp_association_condition_association_maxjobsaccrue(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                maxsubmitjobs = slurmrestapi.models.v0_0_41_openapi_users_add_cond_resp_association_condition_association_maxsubmitjobs.v0_0_41_openapi_users_add_cond_resp_association_condition_association_maxsubmitjobs(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                maxtresminsperjob = [
                    slurmrestapi.models.v0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner.v0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner(
                        type = '', 
                        name = '', 
                        id = 56, 
                        count = 56, )
                    ],
                maxtresrunmins = [
                    slurmrestapi.models.v0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner.v0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner(
                        type = '', 
                        name = '', 
                        id = 56, 
                        count = 56, )
                    ],
                maxtresperjob = [
                    slurmrestapi.models.v0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner.v0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner(
                        type = '', 
                        name = '', 
                        id = 56, 
                        count = 56, )
                    ],
                maxtrespernode = [
                    slurmrestapi.models.v0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner.v0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner(
                        type = '', 
                        name = '', 
                        id = 56, 
                        count = 56, )
                    ],
                maxwalldurationperjob = slurmrestapi.models.v0_0_41_openapi_users_add_cond_resp_association_condition_association_maxwalldurationperjob.v0_0_41_openapi_users_add_cond_resp_association_condition_association_maxwalldurationperjob(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                minpriothresh = slurmrestapi.models.v0_0_41_openapi_users_add_cond_resp_association_condition_association_minpriothresh.v0_0_41_openapi_users_add_cond_resp_association_condition_association_minpriothresh(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                parent = '',
                priority = slurmrestapi.models.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_priority.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_priority(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                qoslevel = [
                    ''
                    ],
                fairshare = 56
            )
        else:
            return V0041OpenapiUsersAddCondRespAssociationConditionAssociation(
        )
        """

    def testV0041OpenapiUsersAddCondRespAssociationConditionAssociation(self):
        """Test V0041OpenapiUsersAddCondRespAssociationConditionAssociation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
