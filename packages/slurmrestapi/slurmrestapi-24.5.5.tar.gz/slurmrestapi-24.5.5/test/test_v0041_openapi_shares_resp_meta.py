# coding: utf-8

"""
    Slurm REST API

    API to access and control Slurm

    The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from slurmrestapi.models.v0041_openapi_shares_resp_meta import V0041OpenapiSharesRespMeta

class TestV0041OpenapiSharesRespMeta(unittest.TestCase):
    """V0041OpenapiSharesRespMeta unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0041OpenapiSharesRespMeta:
        """Test V0041OpenapiSharesRespMeta
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V0041OpenapiSharesRespMeta`
        """
        model = V0041OpenapiSharesRespMeta()
        if include_optional:
            return V0041OpenapiSharesRespMeta(
                plugin = slurmrestapi.models.v0_0_40_openapi_meta_plugin.v0_0_40_openapi_meta_plugin(
                    type = '', 
                    name = '', 
                    data_parser = '', 
                    accounting_storage = '', ),
                client = slurmrestapi.models.v0_0_40_openapi_meta_client.v0_0_40_openapi_meta_client(
                    source = '', 
                    user = '', 
                    group = '', ),
                command = [
                    ''
                    ],
                slurm = slurmrestapi.models.v0_0_40_openapi_meta_slurm.v0_0_40_openapi_meta_slurm(
                    version = slurmrestapi.models.v0_0_40_openapi_meta_slurm_version.v0_0_40_openapi_meta_slurm_version(
                        major = '', 
                        micro = '', 
                        minor = '', ), 
                    release = '', 
                    cluster = '', )
            )
        else:
            return V0041OpenapiSharesRespMeta(
        )
        """

    def testV0041OpenapiSharesRespMeta(self):
        """Test V0041OpenapiSharesRespMeta"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
