Metadata-Version: 2.1
Name: yors_pano_argv_parse
Version: 0.1.0
Summary: parse argv-like args in python
Home-page: https://github.com/ymc-github/panz/blob/main/packages/yors_pano_argv_parse/README.md
License: LICENSE
Keywords: artist,panz,mono,yors_pano_argv_parse
Author: yemiancheng
Author-email: ymc.github@gmail.com
Requires-Python: >=3.10,<4.0
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: License :: Other/Proprietary License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Build Tools
Project-URL: Documentation, https://github.com/ymc-github/panz/blob/main/packages/yors_pano_argv_parse/README.md
Project-URL: Repository, https://github.com/ymc-github/panz.git
Project-URL: changelog, https://github.com/ymc-github/panz/blob/main/packages/yors_pano_argv_parse/CHANGELOG.md
Description-Content-Type: text/markdown

<!-- inject desc here -->
<!-- inject-desc -->

parse argv-like args in python

## Features

<!-- inject feat here -->

- feat(core): parse stro or stra to nano

## Usage

```bash
pip install yors_pano_argv_parse
```

## Demo

<!-- inject demo here -->

```py
# # from main import nanoargs
from yors_pano_argv_parse import nanoargs
if __name__ == "__main__":
    import sys
    if len(sys.argv) > 1:
        input_data = sys.argv[1:] if len(sys.argv) > 2 else sys.argv[1]
        parsed = nanoargs(input_data)
        print(f"Parsed argv: {parsed.argv}")
        print(f"Parsed flags: {parsed.flags}")
        print(f"Parsed extras: {parsed.extras}")
    else:
        print("Please provide command line arguments to parse.")
```

