[project]
name = "elf"
version = "0.1.0"
description = "A Python library for integrating and analyzing vulnerability data to enhance vulnerability management and prioritization."
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "cak", email = "cak@typeerror.com" }]
requires-python = ">=3.10"
dependencies = ["httpx>=0.28.0", "pydantic>=2.10.2"]
keywords = [
    "vulnerability management",
    "cybersecurity",
    "CISA KEV",
    "NIST NVD",
    "FIRST EPSS",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Topic :: Security",
]

[project.urls]
Homepage = "https://github.com/TypeError/elf"
Documentation = "https://github.com/TypeError/elf/"
Repository = "https://github.com/TypeError/elf"
Issue-Tracker = "https://github.com/TypeError/elf/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
exclude = [
    "__pycache__",
    ".git",
    ".gitignore",
    ".python-version",
    ".venv",
    "build",
    "dist",
    "tests",
    "tests/**",
    "uv.lock",
    "venv",
]

[tool.ruff]
target-version = "py310"
select = [
    "ANN", # Type annotation rules
    "B",   # Best practices
    "C",   # Comprehensions for modern syntax
    "D",   # Docstring rules
    "E",   # pycodestyle rules
    "F",   # flake8 rules
    "I",   # Import rules
    "N",   # Naming conventions
    "Q",   # Quotes
    "S",   # String rules
    "T",   # Type-checking rules
    "W",   # Warning rules
]
ignore = [
    "E501",   # Allow longer lines for better readability
    "ANN001", # Avoid mandatory annotations in stub files
    "ANN204", # Allow `Any` for generic functions when needed
]
exclude = ["__pycache__", "build", "dist", ".venv", "venv", ".git", "tests"]
line-length = 100

[dependency-groups]
dev = ["pytest>=8.3.4", "pytest-asyncio>=0.20.3", "ruff>=0.0.285"]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
