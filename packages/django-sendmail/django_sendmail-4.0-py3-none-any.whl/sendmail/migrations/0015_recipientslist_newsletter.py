# Generated by Django 5.1.3 on 2024-11-19 13:57

import django.db.models.deletion
from django.db import migrations, models

import sendmail.validators
from sendmail.settings import get_email_address_setting


class Migration(migrations.Migration):

    dependencies = [
        ('sendmail', '0014_alter_placeholdercontent_language'),
        migrations.swappable_dependency(get_email_address_setting()),

    ]

    operations = [
        migrations.CreateModel(
            name='RecipientsList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='List Name')),
                ('recipients', models.ManyToManyField(related_name='recipients_list', to=get_email_address_setting(), verbose_name='Recipients')),
            ],
            options={
                'verbose_name': 'Recipients List',
                'verbose_name_plural': 'Recipients Lists',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Newsletter name')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('priority', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'low'), (1, 'medium'), (2, 'high'), (3, 'now')], null=True, verbose_name='Priority')),
                ('email_from', models.CharField(max_length=255, validators=[sendmail.validators.validate_email_with_name], verbose_name='From email')),
                ('language', models.CharField(blank=True, choices=[], max_length=12, null=True, verbose_name='Force to Language')),
                ('scheduled_time', models.DateTimeField(blank=True, db_index=True, help_text='The scheduled sending time', null=True, verbose_name='Scheduled Time')),
                ('expires_at', models.DateTimeField(blank=True, help_text="Email won't be sent after this timestamp", null=True, verbose_name='Expires')),
                ('context', models.JSONField(blank=True, null=True, verbose_name='Context')),
                ('attachments', models.ManyToManyField(blank=True, related_name='attachments', to='sendmail.attachment', verbose_name='Attachments')),
                ('emailmerge', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sendmail.emailmergemodel', verbose_name='EmailMergeModel')),
                ('emails', models.ManyToManyField(editable=False, related_name='emails', to='sendmail.emailmodel', verbose_name='Emails')),
                ('to_recipients', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sendmail.recipientslist', verbose_name='To recipients')),
            ],
            options={
                'verbose_name': 'Newsletter',
                'verbose_name_plural': 'Newsletters',
            },
        ),
    ]
