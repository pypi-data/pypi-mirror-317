Metadata-Version: 2.1
Name: robotframework-ghareports
Version: 0.5.0
Summary: Simple github action summary report for robotframework
Author-Email: Jani Mikkonen <jani.mikkonen@gmail.com>
License: GPLV3
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: End Users/Desktop
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: System Administrators
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Quality Assurance
Classifier: Topic :: Software Development :: Testing
Classifier: Topic :: Utilities
Project-URL: Homepage, https://github.com/rasjani/robotframework-ghareports
Requires-Python: >=3.8
Requires-Dist: robotframework>=4.0.0
Requires-Dist: wrapt
Provides-Extra: dev
Requires-Dist: twine; extra == "dev"
Requires-Dist: python-language-server[all]; extra == "dev"
Requires-Dist: ruff; extra == "dev"
Requires-Dist: invoke; extra == "dev"
Requires-Dist: pdm; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: build; extra == "dev"
Description-Content-Type: text/markdown

robotframework-ghareports
=========================


This project enables robot framework to generate Github Job Summary for a testrun. Its a simple robot framework listener, that once
activated when RF is executed, it checks if environment variable GITHUB_STEP_SUMMARY exists and if it does, it exposes test results
to a PR - example output looks something like [this](https://github.com/rasjani/robotframework-ghareports/blob/main/example_step_summary.md)

## Usage

Install:

```shell
python -mpip install robotframework-ghareports
```

Usage:

```shell
robot --listener GHAReports .
```

If you want to limit the width of the tables in the summary, you can provide an argument to the listener like this:


```shell
robot --listener GHAReports:35 .
```

This will split each test case name at every 35 characters into a new line.

And if you want to generate the summary even  if a) you are not running in Github *or* you want to generate extra summary file independent of
Github actions, pass report_file argument to the listener like this:

```shell
robot --listener GHAReports:report_file=extra_summary.md
```
or

```shell
robot --listener GHAReports:34:extra_summary.md
```
