name: Build

on: [ push, pull_request ]

jobs:
  build:
    name: Build the project
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 15
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13" ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        run: pipx install uv
      - name: Install dependencies
        env:
          UV_PYTHON: ${{ steps.setup-python.outputs.python-path }}
        run: |
          uv venv
          uv pip install -r pyproject.toml --all-extras
      - name: Build package
        run: uv build -o dist
      - name: Install package from wheel (non-Windows)
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          wheelFile=$(ls dist/*.whl)
          pip3 install "${wheelFile}[eval]"
      - name: Install package from wheel (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          $wheelFile = (Get-ChildItem -Path dist -Filter *.whl).FullName
          pip3 install "${wheelFile}[eval]"
        shell: pwsh
      - name: Import package
        run: python3 -c "import cohesion_tools"
