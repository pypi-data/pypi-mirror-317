[tool]
[tool.poetry]
name = "sage-templater"
version = "0.5.0"
homepage = "https://github.com/luiscberrocal/sage-templater"
description = "App to parse templates and create them as a Sage import files.."
authors = ["Luis C. Berrocal <luis.berrocal.1942@gmail.com>"]
readme = "README.md"
license =  "MIT"
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
]
packages = [
    { include = "sage_templater" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
click = "^8.1.7"
rich = "^13.9.1"
pydantic = "^2.9.2"
openpyxl = "^3.1.5"
pluggy = "^1.5.0"
twine = "^5.1.1"
pandas = "^2.2.3"
xlrd = "^2.0.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.7.3"
pytest = "^8.3.3"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
factory-boy = "^3.3.1"
pytz = "^2024.1"
bump2version = "^1.0.1"
coverage = "^7.6.1"
tox = "^4.15.1"

[tool.poetry.group.doc.dependencies]
mkdocs = "^1.5.3"
mkdocs-include-markdown-plugin = "^6.0.3"
mkdocs-material = "^9.4.6"
mkdocs-autorefs = "^0.5.0"
mkdocstrings = {extras = ["python"], version = "^0.24.0"}

[tool.poetry.scripts]
sage-templater = 'sage_templater.cli:main'

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"
[tool.ruff]
line-length = 120
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".tox",
    ".vscode",
    "__pypackages__",
    "_build",
    "node_modules",
    "site-packages",
    "**/migrations/*.py",
]
[tool.ruff.lint]

# https://docs.astral.sh/ruff/rules/

select = [
    "ANN", # flake8-annotations
    "ARG", # flake8-unused-arguments
    "B", # flake8-bugbear
    "BLE", # flake8-blind-except
    "D", # pydocstyle
    "E", # pycodestyle
    "ERA", # eradicate
    "F", # Pyflakes
    "FIX", # flake8-fixme
    "G", # flake8-logging-format
    "I", # isort
    "LOG", # flake8-logging
    "N", # pep-8 naming
    "PL", # Pylint
    "PYI", # flake8-pyi
    "RET", # flake8-return
    "RSE", # flake8-raise
    "SIM", # flake8-simplify
    "SLF", # flake8-self
    "T20", # flake8-print
    "UP", # pyupgrade
]
ignore = [
    "ANN101", # Missing type annotation for self in method
    "D100"
]
[tool.ruff.lint.pydocstyle]
convention = "google"
[tool.ruff.lint.per-file-ignores]
# Ignore `E402` (import violations) in all `__init__.py` files, and in `path/to/file.py`.
"__init__.py" = ["E402", "D"]
# Ignore `D` rules everywhere except for the `src/` directory.
"tests/**.py" =  ["D", "ANN", "ERA", "PLR", "ARG", "SLF"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
