"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from friendli.types import BaseModel
import pydantic
from typing import Literal
from typing_extensions import Annotated, TypedDict


ResponseFormatRegexType = Literal["regex"]
r"""The type of the response format: `regex`"""


class ResponseFormatRegexTypedDict(TypedDict):
    type: ResponseFormatRegexType
    r"""The type of the response format: `regex`"""
    schema_: str
    r"""The schema of the output. Lookaheads or lookbehinds (e.g., `\a`, `\z`, `^`, `$`, `(?=)`, `(?!)`, `(?<=...)`, `(?<!...)`) are not supported. Group specials (e.g., `\w`, `\W`, `\d`, `\D`, `\s`, `\S`) do not support non-ASCII characters. Unicode escape patterns (e.g., `\N`, `\p`, `\P`) are not supported. Additionally, conditional matching (`(?(`) and back-references can cause inefficiency.

    """


class ResponseFormatRegex(BaseModel):
    type: ResponseFormatRegexType
    r"""The type of the response format: `regex`"""

    schema_: Annotated[str, pydantic.Field(alias="schema")]
    r"""The schema of the output. Lookaheads or lookbehinds (e.g., `\a`, `\z`, `^`, `$`, `(?=)`, `(?!)`, `(?<=...)`, `(?<!...)`) are not supported. Group specials (e.g., `\w`, `\W`, `\d`, `\D`, `\s`, `\S`) do not support non-ASCII characters. Unicode escape patterns (e.g., `\N`, `\p`, `\P`) are not supported. Additionally, conditional matching (`(?(`) and back-references can cause inefficiency.

    """
