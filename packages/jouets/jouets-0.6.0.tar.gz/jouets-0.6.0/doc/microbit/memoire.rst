`memoire` ‚Äî Un jeu de m√©moire
=============================

Dans ce jeu, l'utilisateur se voit pr√©senter une suite de directions al√©atoires (haut, bas, gauche, droite), et doit ensuite la reproduire en inclinant la carte dans les directions propos√©es, dans le bon ordre. √Ä chaque fais qu'il r√©ussit, un nouvel √©l√©ment est ajout√© √† la liste.

L'algorithme est compos√© de trois boucles imbriqu√©es.

- Chaque passage dans la boucle ext√©rieure correspond √† une nouvelle partie.
- Chaque passage dans la boucle interm√©diaire correspond √† une nouvelle manche (l'affichage d'une suite √† m√©moriser, et la lecture de la suite propos√©e par l'utilisateur) ;
- Chaque passage dans la boucle int√©rieure correspond √† la lecture de la suite propos√©e par l'utilisateur.

La sortie d'une boucle se fait uniquement avec l'instruction ``break``.

L'algorithme en pseudo-code ressemble √† ceci.

.. code-block:: none

   while True:

      Attendre que l'utilisateur secoue la carte.

      Initialisation de la partie

      while True:

         Ajout d'une direction √† la liste
         Affichage de la liste des directions

         while True:

            Lecture de la liste des directions, en v√©rifiant la validit√© au fur et √† mesure.
            Si toute la liste est lue, ou qu'une erreur est d√©tect√©e:
               break

         Si toute la liste a √©t√© lue:
            Afficher ‚ò∫Ô∏è
         Sinon
            break

      # Perdu‚Ä¶
      Afficher üíÄ

Et le vrai code est le suivant.

.. literalinclude:: /../microbit/memoire.py
   :language: python
   :linenos:
