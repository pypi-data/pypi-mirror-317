Metadata-Version: 2.1
Name: augini
Version: 0.2.1
Summary: A framework for generating synthetic tabular data using AI
Author-email: Vadim Borisov <vadim@tabularis.ai>
License: MIT License
        
        Copyright (c) 2024 Vadim Borisov
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Project-URL: Homepage, https://github.com/tabularis-ai/augini
Project-URL: Bug Tracker, https://github.com/tabularis-ai/augini/issues
Keywords: augini,synthetic data,tabular data,AI,data generation,OpenAI,OpenRouter
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: openai>=1.35.13
Requires-Dist: pandas
Requires-Dist: numpy<2.0.0
Requires-Dist: tqdm
Requires-Dist: nest_asyncio
Requires-Dist: pydantic
Provides-Extra: memory
Requires-Dist: sentence-transformers>=2.2.0; extra == "memory"
Requires-Dist: spacy>=3.5.0; extra == "memory"

[![PyPI version](https://badge.fury.io/py/augini.svg)](https://badge.fury.io/py/augini) [![Downloads](https://static.pepy.tech/badge/augini)](https://pepy.tech/project/augini)

# augini: AI-Powered Data Assistant

<p align="center">
  <img src="img/logo_augini.png" alt="augini logo" width="200"/>
</p>

`augini` is an AI-powered data assistant that helps you understand, augment, and transform your tabular data. Built with state-of-the-art language models, it provides an intuitive chat interface and powerful data manipulation capabilities.

## Key Features

### ðŸ¤– Interactive Data Chat

Have natural conversations with your data using `augini`'s chat interface:

```python
from augini import Augini
import pandas as pd

# Initialize with your preferred model
augini = Augini(api_key="your-api-key", model="gpt-4o-mini")

# Load your data
df = pd.read_csv("your_data.csv")

# Start chatting with your data - properly display markdown responses
from IPython.display import display, Markdown

response = augini.chat("What are the main patterns in this dataset?", df)
display(Markdown(response))

# Ask follow-up questions
response = augini.chat("Can you analyze the correlation between age and income?", df)
display(Markdown(response))
```

### ðŸ”„ Intelligent Data Augmentation

Enhance your datasets with AI-generated features:

```python
# Add synthetic features based on existing data
result_df = augini.augment_columns(df, ['occupation', 'interests', 'personality_type'])

# Generate custom features with specific prompts
custom_prompt = """
Based on the person's age and location, suggest:
1. A likely income bracket
2. Preferred shopping categories
3. Travel preferences

Respond with a JSON object with keys 'income_bracket', 'shopping_preferences', 'travel_style'.
"""

enriched_df = augini.augment_columns(df, 
    ['income_bracket', 'shopping_preferences', 'travel_style'],
    custom_prompt=custom_prompt
)
```

### ðŸ”’ Data Anonymization

Generate privacy-safe synthetic data while preserving statistical properties:

```python
# Define anonymization strategy
anonymize_prompt = """
Create an anonymized version that:
1. Replaces personal identifiers with synthetic data
2. Maintains statistical distributions
3. Preserves relationships between variables

Respond with a JSON object containing anonymized values.
"""

# Apply anonymization
anonymous_df = augini.augment_columns(df, 
    ['name_anon', 'email_anon', 'address_anon'],
    custom_prompt=anonymize_prompt
)
```

## Installation

```bash
pip install augini
```

## Quick Start

1. Get your API key from OpenAI or OpenRouter
2. Initialize Augini:
```python
# Using OpenAI
augini = Augini(api_key="your-api-key", model="gpt-4o-mini", use_openrouter=False)

# Using OpenRouter
augini = Augini(api_key="your-api-key", model="meta-llama/llama-3-8b-instruct", use_openrouter=True)
```

## Enterprise Solutions

For enterprise deployments, local installations, or custom solutions, contact us:
- Email: info@tabularis.ai
