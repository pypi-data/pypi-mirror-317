# Generated by ariadne-codegen
# Source: combined.graphql

from datetime import datetime
from typing import Any, List, Optional

from .base_model import BaseModel


class BindingSiteConformer(BaseModel):
    me: "BindingSiteConformerMe"


class BindingSiteConformerMe(BaseModel):
    account: "BindingSiteConformerMeAccount"


class BindingSiteConformerMeAccount(BaseModel):
    project: "BindingSiteConformerMeAccountProject"


class BindingSiteConformerMeAccountProject(BaseModel):
    binding_site_conformer: "BindingSiteConformerMeAccountProjectBindingSiteConformer"


class BindingSiteConformerMeAccountProjectBindingSiteConformer(BaseModel):
    id: Any
    bounding_box: "BindingSiteConformerMeAccountProjectBindingSiteConformerBoundingBox"
    surface_atoms: Optional[List[int]]
    created_at: datetime
    updated_at: datetime
    deleted_at: Optional[datetime]
    name: Optional[str]
    description: Optional[str]
    run_id: Optional[Any]
    tags: Optional[List[str]]
    protein_conformer: "BindingSiteConformerMeAccountProjectBindingSiteConformerProteinConformer"


class BindingSiteConformerMeAccountProjectBindingSiteConformerBoundingBox(BaseModel):
    min: Any
    max: Any


class BindingSiteConformerMeAccountProjectBindingSiteConformerProteinConformer(
    BaseModel
):
    id: Any
    residues: List[int]


BindingSiteConformer.model_rebuild()
BindingSiteConformerMe.model_rebuild()
BindingSiteConformerMeAccount.model_rebuild()
BindingSiteConformerMeAccountProject.model_rebuild()
BindingSiteConformerMeAccountProjectBindingSiteConformer.model_rebuild()
