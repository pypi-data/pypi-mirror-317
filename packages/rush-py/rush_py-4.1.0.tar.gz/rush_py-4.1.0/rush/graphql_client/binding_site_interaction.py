# Generated by ariadne-codegen
# Source: combined.graphql

from datetime import datetime
from typing import Any, List, Optional

from .base_model import BaseModel
from .enums import BindingSiteInteractionKind, PiStackKind


class BindingSiteInteraction(BaseModel):
    me: "BindingSiteInteractionMe"


class BindingSiteInteractionMe(BaseModel):
    account: "BindingSiteInteractionMeAccount"


class BindingSiteInteractionMeAccount(BaseModel):
    project: "BindingSiteInteractionMeAccountProject"


class BindingSiteInteractionMeAccountProject(BaseModel):
    binding_site_interaction: "BindingSiteInteractionMeAccountProjectBindingSiteInteraction"


class BindingSiteInteractionMeAccountProjectBindingSiteInteraction(BaseModel):
    id: Any
    residues: List[int]
    interactions: List[
        "BindingSiteInteractionMeAccountProjectBindingSiteInteractionInteractions"
    ]
    created_at: datetime
    updated_at: datetime
    deleted_at: Optional[datetime]
    name: Optional[str]
    description: Optional[str]
    run_id: Optional[Any]
    tags: Optional[List[str]]


class BindingSiteInteractionMeAccountProjectBindingSiteInteractionInteractions(
    BaseModel
):
    kind: BindingSiteInteractionKind
    pi_stack_kind: Optional[PiStackKind]
    ligand_atom: Any
    receptor_atom: Any


BindingSiteInteraction.model_rebuild()
BindingSiteInteractionMe.model_rebuild()
BindingSiteInteractionMeAccount.model_rebuild()
BindingSiteInteractionMeAccountProject.model_rebuild()
BindingSiteInteractionMeAccountProjectBindingSiteInteraction.model_rebuild()
