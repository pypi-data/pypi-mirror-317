# Generated by ariadne-codegen
# Source: combined.graphql

from datetime import datetime
from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .fragments import PageInfoFull


class Smols(BaseModel):
    me: "SmolsMe"


class SmolsMe(BaseModel):
    account: "SmolsMeAccount"


class SmolsMeAccount(BaseModel):
    project: "SmolsMeAccountProject"


class SmolsMeAccountProject(BaseModel):
    smols: "SmolsMeAccountProjectSmols"


class SmolsMeAccountProjectSmols(BaseModel):
    page_info: "SmolsMeAccountProjectSmolsPageInfo" = Field(alias="pageInfo")
    edges: List["SmolsMeAccountProjectSmolsEdges"]
    total_count: int


class SmolsMeAccountProjectSmolsPageInfo(PageInfoFull):
    pass


class SmolsMeAccountProjectSmolsEdges(BaseModel):
    cursor: str
    node: "SmolsMeAccountProjectSmolsEdgesNode"


class SmolsMeAccountProjectSmolsEdgesNode(BaseModel):
    id: Any
    smi: Optional[str]
    inchi: Optional[str]
    data_blocks: Optional[List[List[str]]]
    created_at: datetime
    updated_at: datetime
    deleted_at: Optional[datetime]
    name: Optional[str]
    description: Optional[str]
    run_id: Optional[Any]
    tags: Optional[List[str]]


Smols.model_rebuild()
SmolsMe.model_rebuild()
SmolsMeAccount.model_rebuild()
SmolsMeAccountProject.model_rebuild()
SmolsMeAccountProjectSmols.model_rebuild()
SmolsMeAccountProjectSmolsEdges.model_rebuild()
