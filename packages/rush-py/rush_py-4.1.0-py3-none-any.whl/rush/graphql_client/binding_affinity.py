# Generated by ariadne-codegen
# Source: combined.graphql

from datetime import datetime
from typing import Any, List, Optional

from .base_model import BaseModel


class BindingAffinity(BaseModel):
    me: "BindingAffinityMe"


class BindingAffinityMe(BaseModel):
    account: "BindingAffinityMeAccount"


class BindingAffinityMeAccount(BaseModel):
    project: "BindingAffinityMeAccountProject"


class BindingAffinityMeAccountProject(BaseModel):
    binding_affinity: "BindingAffinityMeAccountProjectBindingAffinity"


class BindingAffinityMeAccountProjectBindingAffinity(BaseModel):
    id: Any
    affinity: float
    affinity_metric: str
    created_at: datetime
    updated_at: datetime
    deleted_at: Optional[datetime]
    name: Optional[str]
    description: Optional[str]
    run_id: Optional[Any]
    tags: Optional[List[str]]
    protein: "BindingAffinityMeAccountProjectBindingAffinityProtein"
    smol: "BindingAffinityMeAccountProjectBindingAffinitySmol"


class BindingAffinityMeAccountProjectBindingAffinityProtein(BaseModel):
    id: Any
    sequence: str


class BindingAffinityMeAccountProjectBindingAffinitySmol(BaseModel):
    id: Any
    smi: Optional[str]


BindingAffinity.model_rebuild()
BindingAffinityMe.model_rebuild()
BindingAffinityMeAccount.model_rebuild()
BindingAffinityMeAccountProject.model_rebuild()
BindingAffinityMeAccountProjectBindingAffinity.model_rebuild()
