# Generated by ariadne-codegen
# Source: combined.graphql

from datetime import datetime
from typing import Any, List, Optional

from .base_model import BaseModel


class BindingPoseConformer(BaseModel):
    me: "BindingPoseConformerMe"


class BindingPoseConformerMe(BaseModel):
    account: "BindingPoseConformerMeAccount"


class BindingPoseConformerMeAccount(BaseModel):
    project: "BindingPoseConformerMeAccountProject"


class BindingPoseConformerMeAccountProject(BaseModel):
    binding_pose_conformer: "BindingPoseConformerMeAccountProjectBindingPoseConformer"


class BindingPoseConformerMeAccountProjectBindingPoseConformer(BaseModel):
    id: Any
    created_at: datetime
    updated_at: datetime
    deleted_at: Optional[datetime]
    name: Optional[str]
    description: Optional[str]
    run_id: Optional[Any]
    tags: Optional[List[str]]
    smol_conformer: "BindingPoseConformerMeAccountProjectBindingPoseConformerSmolConformer"
    binding_site_conformer: "BindingPoseConformerMeAccountProjectBindingPoseConformerBindingSiteConformer"


class BindingPoseConformerMeAccountProjectBindingPoseConformerSmolConformer(BaseModel):
    id: Any
    residues: List[int]


class BindingPoseConformerMeAccountProjectBindingPoseConformerBindingSiteConformer(
    BaseModel
):
    id: Any
    bounding_box: "BindingPoseConformerMeAccountProjectBindingPoseConformerBindingSiteConformerBoundingBox"


class BindingPoseConformerMeAccountProjectBindingPoseConformerBindingSiteConformerBoundingBox(
    BaseModel
):
    min: Any
    max: Any


BindingPoseConformer.model_rebuild()
BindingPoseConformerMe.model_rebuild()
BindingPoseConformerMeAccount.model_rebuild()
BindingPoseConformerMeAccountProject.model_rebuild()
BindingPoseConformerMeAccountProjectBindingPoseConformer.model_rebuild()
BindingPoseConformerMeAccountProjectBindingPoseConformerBindingSiteConformer.model_rebuild()
