# Generated by ariadne-codegen
# Source: combined.graphql

from datetime import datetime
from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .fragments import PageInfoFull


class SmolLibraries(BaseModel):
    smol_libraries: "SmolLibrariesSmolLibraries"


class SmolLibrariesSmolLibraries(BaseModel):
    page_info: "SmolLibrariesSmolLibrariesPageInfo" = Field(alias="pageInfo")
    edges: List["SmolLibrariesSmolLibrariesEdges"]
    total_count: int


class SmolLibrariesSmolLibrariesPageInfo(PageInfoFull):
    pass


class SmolLibrariesSmolLibrariesEdges(BaseModel):
    cursor: str
    node: "SmolLibrariesSmolLibrariesEdgesNode"


class SmolLibrariesSmolLibrariesEdgesNode(BaseModel):
    id: Any
    name: Optional[str]
    description: Optional[str]
    created_at: datetime
    updated_at: datetime
    deleted_at: Optional[datetime]
    tags: Optional[List[str]]


SmolLibraries.model_rebuild()
SmolLibrariesSmolLibraries.model_rebuild()
SmolLibrariesSmolLibrariesEdges.model_rebuild()
