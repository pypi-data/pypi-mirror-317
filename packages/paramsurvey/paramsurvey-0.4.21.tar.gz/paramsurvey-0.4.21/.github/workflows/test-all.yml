name: test-all

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  linux-macos:
    name: test-all ${{ matrix.os }} ${{ matrix.python-version }} ${{ matrix.VERBOSE }} ${{ matrix.ONE }} ${{ matrix.ONLY_BUILTINS }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.7, 3.8, 3.9, '3.10', '3.11', '3.12']
        EXTRA: [false]  # used to force includes to get included
        ONLY_BUILTINS: ['']  # used to turn off ray
        ONE: [false]  # used to force pandas<2
        include:
          - python-version: 3.7
            os: ubuntu-20.04  # oldest LTS in github actions
            EXTRA: true
          - python-version: 3.7
            os: ubuntu-latest
            # make sure that the most verbose level is not crashy
            VERBOSE: verbose  # does work
            PARAMSURVEY_VERBOSE: 3
            PYTEST_STDERR_VISIBLE: -s
            EXTRA: true
          - python-version: 3.7
            os: ubuntu-latest
            EXTRA: true
            ONE: true
          - python-version: '3.13'
            os: ubuntu-latest
            EXTRA: true
            ONLY_BUILTINS: 1  # no ray wheel for 3.13
          - python-version: '3.11'
            os: macos-latest
            EXTRA: true
            ONLY_BUILTINS: 1
          - python-version: '3.11'
            os: macos-latest
            EXTRA: true
            ONE: true  # this wheel exists, does not in 3.13
            ONLY_BUILTINS: 1
          - python-version: '3.13'
            os: macos-latest
            EXTRA: true
            ONLY_BUILTINS: 1
          #- python-version: '3.7'
          #  os: windows-latest
          #  EXTRA: true
          #  ONLY_BUILTINS: 1
          #- python-version: '3.7'
          #  os: windows-latest
          #  EXTRA: true
          #  ONE: true  # this wheel exists, does not in 3.13
          #  ONLY_BUILTINS: 1
          #- python-version: '3.13'
          #  os: windows-latest
          #  EXTRA: true
          #  ONLY_BUILTINS: 1

    steps:

    - name: checkout
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install pandas<2 if needed
      if: ${{ matrix.ONE }}
      run: |
        pip install 'numpy<2'  # or macos screws up
        pip install 'pandas<2'

    - name: 'Install dependencies'
      run: |
        python -m pip install --upgrade pip
        pip install . .[test]

    - name: 'Install ray if needed'
      if: ${{ ! matrix.ONLY_BUILTINS }}
      run: |
        pip install .[ray]

    - name: 'pytest'
      run: |
        make test_coverage
      env:
        PARAMSURVEY_VERBOSE: ${{ matrix.PARAMSURVEY_VERBOSE }}
        PYTEST_STDERR_VISIBLE: ${{ matrix.PYTEST_STDERR_VISIBLE }}
        ONLY_BUILTINS: ${{ matrix.ONLY_BUILTINS }}

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
