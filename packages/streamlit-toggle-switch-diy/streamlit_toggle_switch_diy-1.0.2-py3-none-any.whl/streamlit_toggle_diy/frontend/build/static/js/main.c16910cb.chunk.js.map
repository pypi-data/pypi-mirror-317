{"version":3,"sources":["streamlit_toggle.tsx","index.tsx"],"names":["withStreamlitConnection","props","_props$args","args","default_value","label_end","label_start","justify","active_color","inactive_color","track_color","useEffect","Streamlit","setFrameHeight","_React$useState","React","useState","checkStatus","_React$useState2","_slicedToArray","state","setState","snowflakeTheme","createTheme","overrides","MuiSwitch","switchBase","color","colorSecondary","track","opacity","backgroundColor","createElement","ThemeProvider","theme","Typography","component","variant","paragraph","gutterBottom","Grid","container","justifyContent","item","className","Switch","checked","onChange","event","_objectSpread","_defineProperty","target","name","setComponentValue","ReactDOM","render","StrictMode","StreamlitToggleSwitch","document","getElementById"],"mappings":"6SAyEeA,G,MAAAA,aA5DS,SAACC,GAEvB,IAAAC,EAAmGD,EAAME,KAAlGC,EAAaF,EAAbE,cAAeC,EAASH,EAATG,UAAWC,EAAWJ,EAAXI,YAAYC,EAAOL,EAAPK,QAASC,EAAYN,EAAZM,aAAcC,EAAcP,EAAdO,eAAgBC,EAAWR,EAAXQ,YACpFC,qBAAU,kBAAMC,IAAUC,oBAG1B,IAIAC,EAA0BC,IAAMC,SAAS,CACrCC,YAAab,IACfc,EAAAC,YAAAL,EAAA,GAFKM,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAIhBI,EAAiBC,YAAY,CACjCC,UAAW,CACTC,UAAW,CACTC,WACC,CAECC,MAAOlB,GAETmB,eAAgB,CACd,YAAa,CAEXD,MAAOnB,IAGXqB,MAAO,CAELC,QAAS,GACTC,gBAAiBrB,EACjB,uBAAwB,CACtBoB,QAAS,EACTC,gBAAiBrB,QAQ3B,OACEK,IAAAiB,cAACC,IAAa,CAACC,MAAOZ,GACtBP,IAAAiB,cAACG,IAAU,CAAEC,UAAU,MAAMC,QAAQ,YAAYC,WAAW,EAAOC,cAAc,GACjFxB,IAAAiB,cAACQ,IAAI,CAACJ,UAAU,QAAQK,WAAS,EAACC,eAAgBnC,GAChDQ,IAAAiB,cAACQ,IAAI,CAACG,MAAI,EAACC,UAAU,cAActC,GACnCS,IAAAiB,cAACQ,IAAI,CAACG,MAAI,GACV5B,IAAAiB,cAACa,IAAM,CACHC,QAAS1B,EAAMH,YACf8B,SA5Ca,SAACC,GACpB3B,EAAQ4B,wBAAC,GAAK7B,GAAK,GAAA8B,YAAA,GAAGF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOL,WACvDlC,IAAUyC,kBAAkBL,EAAMG,OAAOL,UA2CnCM,KAAK,iBAETrC,IAAAiB,cAACQ,IAAI,CAACG,MAAI,EAACC,UAAU,aAAavC,UC7DxCiD,IAASC,OACPxC,IAAAiB,cAACjB,IAAMyC,WAAU,KACfzC,IAAAiB,cAACyB,EAAqB,OAExBC,SAASC,eAAe,W","file":"static/js/main.c16910cb.chunk.js","sourcesContent":["import {\n  ComponentProps,\n  Streamlit,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { useEffect } from \"react\"\nimport { createTheme } from '@material-ui/core/styles';\nimport { Typography,Switch, Grid } from \"@material-ui/core\";\nimport { ThemeProvider } from '@material-ui/styles';\nimport './style.css'\n\n\n\nconst StreamlitToogle = (props: ComponentProps) => {\n\n  const {default_value, label_end, label_start,justify, active_color, inactive_color, track_color} = props.args;\n  useEffect(() => Streamlit.setFrameHeight());\n\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n    Streamlit.setComponentValue(event.target.checked );\n  };\n  const [state, setState] = React.useState({\n      checkStatus: default_value\n  });\n\n  const snowflakeTheme = createTheme({\n    overrides: {\n      MuiSwitch: {\n        switchBase:\n         {\n          // Controls default (unchecked) color for the thumb\n          color: inactive_color\n        },\n        colorSecondary: {\n          \"&$checked\": {\n            // Controls checked color for the thumb\n            color: active_color\n          }\n        },\n        track: {\n          // Controls default (unchecked) color for the track\n          opacity: 0.1,\n          backgroundColor: track_color,\n          \"$checked$checked + &\": {\n            opacity: 1,\n            backgroundColor: track_color,\n\n          }\n        }\n      }\n    }\n  });\n\n  return (\n    <ThemeProvider theme={snowflakeTheme}>\n    <Typography  component=\"div\" variant=\"subtitle1\" paragraph={false} gutterBottom={false}>\n    <Grid component=\"label\" container justifyContent={justify}> \n      <Grid item className=\"beforeText\">{label_start}</Grid>\n      <Grid item>\n      <Switch\n          checked={state.checkStatus}\n          onChange={handleChange}\n          name=\"checkStatus\"/>\n      </Grid>\n      <Grid item className=\"afterText\">{label_end}</Grid> \n    </Grid>\n    </Typography>\n    </ThemeProvider>\n  );\n}\n\nexport default withStreamlitConnection(StreamlitToogle);\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport StreamlitToggleSwitch from \"./streamlit_toggle\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitToggleSwitch />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}