[build-system]
requires = ["hatchling >= 1.13.0"]
build-backend = "hatchling.build"

[project]
name = "plutonkit"
version = "1.0.31a2"
description = "Startkit for template project, for your desired structure of framework"
long_description_content_type = "text/markdown"
requires-python = ">=3.8"
license = "MIT"
authors = [
    { name = "Codehyouka", email = "plants.coordinators@gmail.com" },
]
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]
dependencies = [
    "PyYAML>=6.0.1",
    "pytest",
    "pytz",
    "pylint",
    "requests"
]

[project.urls]
Homepage = "https://plutonkit.codehyouka.xyz/"
Documentation = "https://plutonkit.codehyouka.xyz/"
Repository = "https://github.com/fonipts/pluton-kit"

[project.scripts]
plutonkit = "plutonkit.command:autoload"
plkcmd = "plutonkit.command:load_command"

[project.optional-dependencies]
all = [

]

[tool.hatch.version]
path = "plutonkit/__init__.py"

[[tool.mypy.overrides]]
module = "tests.*"
ignore_missing_imports = true
check_untyped_defs = true

[tool.pytest.ini_options]
addopts = [
  "--strict-config",
  "--strict-markers",
  "--ignore=docs_src",
]

xfail_strict = true
junit_family = "xunit2"
filterwarnings = [
    "error",
    # TODO: needed by asyncio in Python 3.9.7 https://bugs.python.org/issue45097, try to remove on 3.9.8
    'ignore:The loop argument is deprecated since Python 3\.8, and scheduled for removal in Python 3\.10:DeprecationWarning:asyncio',
    'ignore:starlette.middleware.wsgi is deprecated and will be removed in a future release\..*:DeprecationWarning:starlette',
    # TODO: remove after upgrading HTTPX to a version newer than 0.23.0
    # Including PR: https://github.com/encode/httpx/pull/2309
    "ignore:'cgi' is deprecated:DeprecationWarning",
    # For passlib
    "ignore:'crypt' is deprecated and slated for removal in Python 3.13:DeprecationWarning",
    # see https://trio.readthedocs.io/en/stable/history.html#trio-0-22-0-2022-09-28
    "ignore:You seem to already have a custom.*:RuntimeWarning:trio",
    "ignore::trio.TrioDeprecationWarning",
    # TODO remove pytest-cov
    'ignore::pytest.PytestDeprecationWarning:pytest_cov',
]

[tool.coverage.run]
parallel = true
source = [
    "src",
]
context = '${CONTEXT}'
omit = [
]

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191", # indentation contains tabs
]
