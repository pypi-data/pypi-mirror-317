# Generated by ariadne-codegen
# Source: ./documents

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import ContentTypes, EntityState, FileTypes


class PublishConversation(BaseModel):
    publish_conversation: Optional["PublishConversationPublishConversation"] = Field(
        alias="publishConversation"
    )


class PublishConversationPublishConversation(BaseModel):
    id: str
    name: str
    state: EntityState
    type: Optional[ContentTypes]
    file_type: Optional[FileTypes] = Field(alias="fileType")
    mime_type: Optional[str] = Field(alias="mimeType")
    uri: Optional[Any]
    collections: Optional[
        List[Optional["PublishConversationPublishConversationCollections"]]
    ]
    text_uri: Optional[Any] = Field(alias="textUri")
    audio_uri: Optional[Any] = Field(alias="audioUri")
    markdown: Optional[str]


class PublishConversationPublishConversationCollections(BaseModel):
    id: str
    name: str


PublishConversation.model_rebuild()
PublishConversationPublishConversation.model_rebuild()
