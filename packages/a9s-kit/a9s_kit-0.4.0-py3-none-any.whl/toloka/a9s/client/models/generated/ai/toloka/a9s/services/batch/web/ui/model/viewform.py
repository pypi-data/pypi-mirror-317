# generated by datamodel-codegen:
#   filename:  a9s.json

from __future__ import annotations

from typing import Annotated, Literal, Sequence

from pydantic import BaseModel, ConfigDict, Field


class BatchActiveTaskLimitViewForm(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    value: int | None = None


class BatchCompletionViewForm(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    type: Literal['AUTO', 'MANUAL'] | None = None


class BatchExtensionInstanceConfigViewForm(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    extension_id: str | None = None
    instance_id: str | None = None


class BatchExtensionsViewForm(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    instances: Annotated[
        Sequence[BatchExtensionInstanceConfigViewForm] | None,
        Field(max_length=100, min_length=0),
    ] = None
