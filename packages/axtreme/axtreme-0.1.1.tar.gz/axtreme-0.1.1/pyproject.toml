[build-system]
requires = [
    "hatchling",
]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
only-include = [
    "src/axtreme",
    "tests",
    ".coveragerc",
    ".editorconfig",
    "pytest.ini",
    "ruff.toml",
    "uv.lock",
]

[tool.hatch.build.targets.wheel]
packages = [
    "src/axtreme",
]

[project]
name = "axtreme"
version = "0.1.1"
description = "A development library for the RaPiD project"
readme = "README.md"
requires-python = ">= 3.11"
license = { file = "LICENSE" }
authors = [
    { name = "Sebastian Winter", email = "sebastian.winter@dnv.com" },
    { name = "Kristoffer Skare", email = "kristoffer.skare@dnv.com" },
    { name = "Magnus Kristiansen", email = "magnus.kristiansen@dnv.com" },
]
maintainers = [
    { name = "Claas Rostock", email = "claas.rostock@dnv.com" },
    { name = "Jorge Luis Mendez", email = "jorge.luis.mendez@dnv.com" },
]
keywords = [
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    # "Operating System :: MacOS",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "numpy>=1.26,<2.0",
    "matplotlib>=3.9",
    "statsmodels>=0.14.4",
    "filterpy>=1.4.5",
    "numba>=0.60.0",
    "dataclasses-json>=0.6.7",
    "gitpython>=3.1.43",
    "ax-platform[mysql]==0.3.7",
]

[project.optional-dependencies]
cuda = [
    "torch==2.4.1+cu124",
]

[project.urls]
Homepage = "https://github.com/dnv-opensource/axtreme"
Documentation = "https://dnv-opensource.github.io/axtreme/README.html"
Repository = "https://github.com/dnv-opensource/axtreme.git"
Issues = "https://github.com/dnv-opensource/axtreme/issues"
Changelog = "https://github.com/dnv-opensource/axtreme/blob/main/CHANGELOG.md"


[dependency-groups]
dev = [
    "pytest>=8.3",
    "pytest-cov>=6.0",
    "ruff>=0.8.3",
    "pyright>=1.1.390",
    "mypy>=1.13",
    "sourcery>=1.27",
    "pre-commit>=4.0",
    "Sphinx>=8.1",
    "sphinx-argparse-cli>=1.19",
    "sphinx-autodoc-typehints>=2.5",
    "sphinxcontrib-mermaid>=1.0.0",
    "myst-parser>=4.0",
    "furo>=2024.8",
    "jupyter>=1.1",
    "pandas-stubs>=2.2",
    "pyarrow>=18.1",
]

[tool.uv]
default-groups = [
    "dev",
]
find-links = [
    "https://download.pytorch.org/whl/torch",
]
native-tls = true


[tool.mypy]
plugins = [
    "numpy.typing.mypy_plugin",
]
mypy_path = "stubs"
files = [
    "src",
    "tests",
    "examples",
    "tutorials",
]
check_untyped_defs = true
disable_error_code = [
    "misc",
    "import-untyped",
]


[tool.pyright]
stubPath = "stubs"
include = [
    "src",
    "tests",
    "examples",
    "tutorials",
]

typeCheckingMode = "basic"
useLibraryCodeForTypes = true
reportMissingParameterType = "error"
reportUnknownParameterType = "warning"
reportUnknownMemberType = false                    # consider to set to `false` if you work a lot with matplotlib and pandas, which are both not properly typed and known to trigger this warning
reportMissingTypeArgument = "error"
reportPropertyTypeMismatch = "error"
reportFunctionMemberAccess = "warning"
reportPrivateUsage = false                         # <- TODO: set back to "warning" and resolve issues raised, instead of globally dectivating the rule. CLAROS, 2024-09-18
reportTypeCommentUsage = "warning"
reportIncompatibleMethodOverride = "warning"
reportIncompatibleVariableOverride = "error"
reportInconsistentConstructor = "error"
reportOverlappingOverload = "warning"
reportUninitializedInstanceVariable = "warning"
reportCallInDefaultInitializer = "warning"
reportUnnecessaryIsInstance = "information"
reportUnnecessaryCast = "warning"
reportUnnecessaryComparison = "warning"
reportUnnecessaryContains = "warning"
reportUnusedCallResult = "warning"
reportUnusedExpression = "warning"
reportMatchNotExhaustive = "warning"
reportShadowedImports = "warning"
reportUntypedFunctionDecorator = "warning"
reportUntypedClassDecorator = "warning"
reportUntypedBaseClass = "error"
reportUntypedNamedTuple = "warning"
reportUnnecessaryTypeIgnoreComment = "information"
# Activate the following rules only locally and temporary, i.e. for a QA session.
# (For server side CI they are considered too strict.)
# reportMissingTypeStubs = true
# reportConstantRedefinition = "warning"
# reportImportCycles = "warning"
# reportImplicitStringConcatenation = "warning"
reportArgumentType = false # <- TODO: delete and resolve issues raised, instead of globally dectivating the rule. CLAROS, 2024-09-18
