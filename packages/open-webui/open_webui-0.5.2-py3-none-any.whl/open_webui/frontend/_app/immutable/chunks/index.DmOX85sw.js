import{b as c}from"./index.Bqud_akh.js";const l=async(r="",o)=>{let a=null;const n=await fetch(`${c}/channels/create`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`},body:JSON.stringify({...o})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t.detail,console.log(t),null));if(a)throw a;return n},h=async(r="")=>{let o=null;const a=await fetch(`${c}/channels/`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(o=n.detail,console.log(n),null));if(o)throw o;return a},u=async(r="",o)=>{let a=null;const n=await fetch(`${c}/channels/${o}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t.detail,console.log(t),null));if(a)throw a;return n},p=async(r="",o,a)=>{let n=null;const t=await fetch(`${c}/channels/${o}/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`},body:JSON.stringify({...a})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).then(e=>e).catch(e=>(n=e.detail,console.log(e),null));if(n)throw n;return t},d=async(r="",o)=>{let a=null;const n=await fetch(`${c}/channels/${o}/delete`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t.detail,console.log(t),null));if(a)throw a;return n},y=async(r="",o,a=0,n=50)=>{let t=null;const e=await fetch(`${c}/channels/${o}/messages?skip=${a}&limit=${n}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).then(s=>s).catch(s=>(t=s.detail,console.log(s),null));if(t)throw t;return e},w=async(r="",o,a)=>{let n=null;const t=await fetch(`${c}/channels/${o}/messages/post`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`},body:JSON.stringify({...a})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).then(e=>e).catch(e=>(n=e.detail,console.log(e),null));if(n)throw n;return t},j=async(r="",o,a,n)=>{let t=null;const e=await fetch(`${c}/channels/${o}/messages/${a}/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`},body:JSON.stringify({...n})}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).then(s=>s).catch(s=>(t=s.detail,console.log(s),null));if(t)throw t;return e},f=async(r="",o,a)=>{let n=null;const t=await fetch(`${c}/channels/${o}/messages/${a}/delete`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`}}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).then(e=>e).catch(e=>(n=e.detail,console.log(e),null));if(n)throw n;return t};export{y as a,d as b,p as c,f as d,h as e,l as f,u as g,w as s,j as u};
//# sourceMappingURL=index.DmOX85sw.js.map
