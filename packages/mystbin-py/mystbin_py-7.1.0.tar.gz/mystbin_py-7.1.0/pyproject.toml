[project]
name = "mystbin-py"
version = "7.1.0"
description = "A small simple wrapper around the mystb.in API."
authors = [
    { name = "Alex NÃ¸rgaard", email = "umbra@abstractumbra.dev" },
]
dependencies = [
    "aiohttp<4.0,>=3.8",
    "aiohttp[speedups]<4.0,>=3.8; extra == \"speed\"",
]
requires-python = "<4.0,>=3.8"
readme = "README.md"
keywords = [
    "mystbin",
    "paste",
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet",
    "Typing :: Typed",
]

[project.license]
file = "LICENSE"

[project.urls]
"Issue Tracker" = "https://github.com/PythonistaGuild/mystbin.py/issues"
homepage = "https://github.com/PythonistaGuild/mystbin.py"
repository = "https://github.com/PythonistaGuild/mystbin.py"

[project.scripts]
version = "mystbin.__main__:show_version"

[dependency-groups]
speedups = [
    "aiohttp[speedups]<4.0,>=3.8",
]
docs = [
    "sphinx",
    "sphinxcontrib-trio",
    "furo",
]
dev = [
    "ruff",
    "typing-extensions",
]

[tool.pdm]
distribution = true

[tool.pdm.build]
includes = [
    "mystbin",
    "mystbin/**/*.py",
    "mystbin/py.typed",
    "LICENSE",
]

[tool.pdm.scripts]
docs = "sphinx-build -aEWT --keep-going docs/ docs/build"

[tool.ruff]
line-length = 125
target-version = "py38"

[tool.ruff.lint]
preview = true
select = [
    "A",
    "ANN",
    "ASYNC",
    "B",
    "BLE",
    "C4",
    "COM",
    "DTZ",
    "E",
    "EM",
    "ERA",
    "F",
    "FA",
    "FBT",
    "FURB",
    "G",
    "I",
    "INP",
    "ISC",
    "NPY",
    "PD",
    "PERF",
    "PGH",
    "PIE",
    "PLC",
    "PLE",
    "PLW",
    "PTH",
    "PYI",
    "Q",
    "Q003",
    "RET",
    "RSE",
    "RUF",
    "S",
    "SIM",
    "SLOT",
    "T20",
    "TC",
    "TID",
    "TRY",
    "UP",
    "YTT",
    "DOC",
]
ignore = [
    "ANN401",
    "EM101",
    "F401",
    "F402",
    "F403",
    "F405",
    "PD011",
    "PERF203",
    "PLC0414",
    "Q000",
    "RUF001",
    "RUF009",
    "S101",
    "SIM105",
    "TRY003",
    "TRY301",
    "UP034",
    "UP038",
]
unfixable = [
    "E501",
    "ERA",
]
exclude = [
    "docs/conf.py",
]

[tool.ruff.lint.isort]
split-on-trailing-comma = true
combine-as-imports = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false
parametrize-names-type = "csv"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"

[tool.ruff.lint.flake8-tidy-imports.banned-api."typing.TypeIs"]
msg = "TypeIs is fundamentally unsafe, even when using it as described to be safe"

[tool.ruff.lint.flake8-tidy-imports.banned-api."typing.TypeGuard"]
msg = "TypeGuard is fundamentally unsafe"

[tool.ruff.lint.flake8-tidy-imports.banned-api."typing_extensions.TypeIs"]
msg = "TypeIs is fundamentally unsafe, even when using it as described to be safe"

[tool.ruff.lint.flake8-tidy-imports.banned-api."typing_extensions.TypeGuard"]
msg = "TypeGuard is fundamentally unsafe"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pyright]
ignore = [
    "docs/conf.py",
]
include = [
    "mystbin/**/*.py",
]
useLibraryCodeForTypes = true
typeCheckingMode = "strict"
pythonVersion = "3.8"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"
