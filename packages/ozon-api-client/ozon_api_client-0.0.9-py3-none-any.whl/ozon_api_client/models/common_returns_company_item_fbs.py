# coding: utf-8

"""
    Документация Ozon Seller API

    По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru)  > [Информационная платформа и сообщество разработчиков Ozon for Dev](https://dev.ozon.ru/)   # noqa: E501

    OpenAPI spec version: 2.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CommonReturnsCompanyItemFbs(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'clearing_id': 'int',
        'commission': 'float',
        'commission_percent': 'float',
        'exemplar_id': 'int',
        'id': 'int',
        'is_moving': 'bool',
        'is_opened': 'bool',
        'last_free_waiting_day': 'str',
        'place_id': 'int',
        'moving_to_place_name': 'str',
        'picking_amount': 'float',
        'posting_number': 'str',
        'picking_tag': 'str',
        'price': 'float',
        'price_without_commission': 'float',
        'product_id': 'int',
        'product_name': 'str',
        'quantity': 'int',
        'return_barcode': 'str',
        'return_clearing_id': 'int',
        'return_date': 'str',
        'return_reason_name': 'str',
        'waiting_for_seller_date_time': 'str',
        'returned_to_seller_date_time': 'str',
        'waiting_for_seller_days': 'int',
        'returns_keeping_cost': 'float',
        'sku': 'int',
        'status': 'str'
    }

    attribute_map = {
        'clearing_id': 'clearing_id',
        'commission': 'commission',
        'commission_percent': 'commission_percent',
        'exemplar_id': 'exemplar_id',
        'id': 'id',
        'is_moving': 'is_moving',
        'is_opened': 'is_opened',
        'last_free_waiting_day': 'last_free_waiting_day',
        'place_id': 'place_id',
        'moving_to_place_name': 'moving_to_place_name',
        'picking_amount': 'picking_amount',
        'posting_number': 'posting_number',
        'picking_tag': 'picking_tag',
        'price': 'price',
        'price_without_commission': 'price_without_commission',
        'product_id': 'product_id',
        'product_name': 'product_name',
        'quantity': 'quantity',
        'return_barcode': 'return_barcode',
        'return_clearing_id': 'return_clearing_id',
        'return_date': 'return_date',
        'return_reason_name': 'return_reason_name',
        'waiting_for_seller_date_time': 'waiting_for_seller_date_time',
        'returned_to_seller_date_time': 'returned_to_seller_date_time',
        'waiting_for_seller_days': 'waiting_for_seller_days',
        'returns_keeping_cost': 'returns_keeping_cost',
        'sku': 'sku',
        'status': 'status'
    }

    def __init__(self, clearing_id=None, commission=None, commission_percent=None, exemplar_id=None, id=None, is_moving=None, is_opened=None, last_free_waiting_day=None, place_id=None, moving_to_place_name=None, picking_amount=None, posting_number=None, picking_tag=None, price=None, price_without_commission=None, product_id=None, product_name=None, quantity=None, return_barcode=None, return_clearing_id=None, return_date=None, return_reason_name=None, waiting_for_seller_date_time=None, returned_to_seller_date_time=None, waiting_for_seller_days=None, returns_keeping_cost=None, sku=None, status=None):  # noqa: E501
        """CommonReturnsCompanyItemFbs - a model defined in Swagger"""  # noqa: E501
        self._clearing_id = None
        self._commission = None
        self._commission_percent = None
        self._exemplar_id = None
        self._id = None
        self._is_moving = None
        self._is_opened = None
        self._last_free_waiting_day = None
        self._place_id = None
        self._moving_to_place_name = None
        self._picking_amount = None
        self._posting_number = None
        self._picking_tag = None
        self._price = None
        self._price_without_commission = None
        self._product_id = None
        self._product_name = None
        self._quantity = None
        self._return_barcode = None
        self._return_clearing_id = None
        self._return_date = None
        self._return_reason_name = None
        self._waiting_for_seller_date_time = None
        self._returned_to_seller_date_time = None
        self._waiting_for_seller_days = None
        self._returns_keeping_cost = None
        self._sku = None
        self._status = None
        self.discriminator = None
        if clearing_id is not None:
            self.clearing_id = clearing_id
        if commission is not None:
            self.commission = commission
        if commission_percent is not None:
            self.commission_percent = commission_percent
        if exemplar_id is not None:
            self.exemplar_id = exemplar_id
        if id is not None:
            self.id = id
        if is_moving is not None:
            self.is_moving = is_moving
        if is_opened is not None:
            self.is_opened = is_opened
        if last_free_waiting_day is not None:
            self.last_free_waiting_day = last_free_waiting_day
        if place_id is not None:
            self.place_id = place_id
        if moving_to_place_name is not None:
            self.moving_to_place_name = moving_to_place_name
        if picking_amount is not None:
            self.picking_amount = picking_amount
        if posting_number is not None:
            self.posting_number = posting_number
        if picking_tag is not None:
            self.picking_tag = picking_tag
        if price is not None:
            self.price = price
        if price_without_commission is not None:
            self.price_without_commission = price_without_commission
        if product_id is not None:
            self.product_id = product_id
        if product_name is not None:
            self.product_name = product_name
        if quantity is not None:
            self.quantity = quantity
        if return_barcode is not None:
            self.return_barcode = return_barcode
        if return_clearing_id is not None:
            self.return_clearing_id = return_clearing_id
        if return_date is not None:
            self.return_date = return_date
        if return_reason_name is not None:
            self.return_reason_name = return_reason_name
        if waiting_for_seller_date_time is not None:
            self.waiting_for_seller_date_time = waiting_for_seller_date_time
        if returned_to_seller_date_time is not None:
            self.returned_to_seller_date_time = returned_to_seller_date_time
        if waiting_for_seller_days is not None:
            self.waiting_for_seller_days = waiting_for_seller_days
        if returns_keeping_cost is not None:
            self.returns_keeping_cost = returns_keeping_cost
        if sku is not None:
            self.sku = sku
        if status is not None:
            self.status = status

    @property
    def clearing_id(self):
        """Gets the clearing_id of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Штрихкод изначального отправления.  # noqa: E501

        :return: The clearing_id of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: int
        """
        return self._clearing_id

    @clearing_id.setter
    def clearing_id(self, clearing_id):
        """Sets the clearing_id of this CommonReturnsCompanyItemFbs.

        Штрихкод изначального отправления.  # noqa: E501

        :param clearing_id: The clearing_id of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: int
        """

        self._clearing_id = clearing_id

    @property
    def commission(self):
        """Gets the commission of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Комиссия.  # noqa: E501

        :return: The commission of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: float
        """
        return self._commission

    @commission.setter
    def commission(self, commission):
        """Sets the commission of this CommonReturnsCompanyItemFbs.

        Комиссия.  # noqa: E501

        :param commission: The commission of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: float
        """

        self._commission = commission

    @property
    def commission_percent(self):
        """Gets the commission_percent of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Процент комиссии.  # noqa: E501

        :return: The commission_percent of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: float
        """
        return self._commission_percent

    @commission_percent.setter
    def commission_percent(self, commission_percent):
        """Sets the commission_percent of this CommonReturnsCompanyItemFbs.

        Процент комиссии.  # noqa: E501

        :param commission_percent: The commission_percent of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: float
        """

        self._commission_percent = commission_percent

    @property
    def exemplar_id(self):
        """Gets the exemplar_id of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Идентификатор экземпляра в логистической системе Ozon.  # noqa: E501

        :return: The exemplar_id of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: int
        """
        return self._exemplar_id

    @exemplar_id.setter
    def exemplar_id(self, exemplar_id):
        """Sets the exemplar_id of this CommonReturnsCompanyItemFbs.

        Идентификатор экземпляра в логистической системе Ozon.  # noqa: E501

        :param exemplar_id: The exemplar_id of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: int
        """

        self._exemplar_id = exemplar_id

    @property
    def id(self):
        """Gets the id of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Идентификатор возврата в учётной системе Ozon.  # noqa: E501

        :return: The id of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CommonReturnsCompanyItemFbs.

        Идентификатор возврата в учётной системе Ozon.  # noqa: E501

        :param id: The id of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def is_moving(self):
        """Gets the is_moving of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Если товар в пути — `true`.  # noqa: E501

        :return: The is_moving of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: bool
        """
        return self._is_moving

    @is_moving.setter
    def is_moving(self, is_moving):
        """Sets the is_moving of this CommonReturnsCompanyItemFbs.

        Если товар в пути — `true`.  # noqa: E501

        :param is_moving: The is_moving of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: bool
        """

        self._is_moving = is_moving

    @property
    def is_opened(self):
        """Gets the is_opened of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Признак вскрытия упаковки. `true`, если упаковка вскрыта.  # noqa: E501

        :return: The is_opened of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: bool
        """
        return self._is_opened

    @is_opened.setter
    def is_opened(self, is_opened):
        """Sets the is_opened of this CommonReturnsCompanyItemFbs.

        Признак вскрытия упаковки. `true`, если упаковка вскрыта.  # noqa: E501

        :param is_opened: The is_opened of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: bool
        """

        self._is_opened = is_opened

    @property
    def last_free_waiting_day(self):
        """Gets the last_free_waiting_day of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Последний день бесплатного хранения.  # noqa: E501

        :return: The last_free_waiting_day of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: str
        """
        return self._last_free_waiting_day

    @last_free_waiting_day.setter
    def last_free_waiting_day(self, last_free_waiting_day):
        """Sets the last_free_waiting_day of this CommonReturnsCompanyItemFbs.

        Последний день бесплатного хранения.  # noqa: E501

        :param last_free_waiting_day: The last_free_waiting_day of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: str
        """

        self._last_free_waiting_day = last_free_waiting_day

    @property
    def place_id(self):
        """Gets the place_id of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Идентификатор склада, в который везут товар.  # noqa: E501

        :return: The place_id of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: int
        """
        return self._place_id

    @place_id.setter
    def place_id(self, place_id):
        """Sets the place_id of this CommonReturnsCompanyItemFbs.

        Идентификатор склада, в который везут товар.  # noqa: E501

        :param place_id: The place_id of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: int
        """

        self._place_id = place_id

    @property
    def moving_to_place_name(self):
        """Gets the moving_to_place_name of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Название склада, в который везут товар.  # noqa: E501

        :return: The moving_to_place_name of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: str
        """
        return self._moving_to_place_name

    @moving_to_place_name.setter
    def moving_to_place_name(self, moving_to_place_name):
        """Sets the moving_to_place_name of this CommonReturnsCompanyItemFbs.

        Название склада, в который везут товар.  # noqa: E501

        :param moving_to_place_name: The moving_to_place_name of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: str
        """

        self._moving_to_place_name = moving_to_place_name

    @property
    def picking_amount(self):
        """Gets the picking_amount of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Стоимость доставки.  # noqa: E501

        :return: The picking_amount of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: float
        """
        return self._picking_amount

    @picking_amount.setter
    def picking_amount(self, picking_amount):
        """Sets the picking_amount of this CommonReturnsCompanyItemFbs.

        Стоимость доставки.  # noqa: E501

        :param picking_amount: The picking_amount of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: float
        """

        self._picking_amount = picking_amount

    @property
    def posting_number(self):
        """Gets the posting_number of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Номер отправления.  # noqa: E501

        :return: The posting_number of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: str
        """
        return self._posting_number

    @posting_number.setter
    def posting_number(self, posting_number):
        """Sets the posting_number of this CommonReturnsCompanyItemFbs.

        Номер отправления.  # noqa: E501

        :param posting_number: The posting_number of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: str
        """

        self._posting_number = posting_number

    @property
    def picking_tag(self):
        """Gets the picking_tag of this CommonReturnsCompanyItemFbs.  # noqa: E501


        :return: The picking_tag of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: str
        """
        return self._picking_tag

    @picking_tag.setter
    def picking_tag(self, picking_tag):
        """Sets the picking_tag of this CommonReturnsCompanyItemFbs.


        :param picking_tag: The picking_tag of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: str
        """

        self._picking_tag = picking_tag

    @property
    def price(self):
        """Gets the price of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Текущая цена товара без скидки.  # noqa: E501

        :return: The price of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this CommonReturnsCompanyItemFbs.

        Текущая цена товара без скидки.  # noqa: E501

        :param price: The price of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: float
        """

        self._price = price

    @property
    def price_without_commission(self):
        """Gets the price_without_commission of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Стоимость товара без учёта комиссии.  # noqa: E501

        :return: The price_without_commission of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: float
        """
        return self._price_without_commission

    @price_without_commission.setter
    def price_without_commission(self, price_without_commission):
        """Sets the price_without_commission of this CommonReturnsCompanyItemFbs.

        Стоимость товара без учёта комиссии.  # noqa: E501

        :param price_without_commission: The price_without_commission of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: float
        """

        self._price_without_commission = price_without_commission

    @property
    def product_id(self):
        """Gets the product_id of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Идентификатор товара.  # noqa: E501

        :return: The product_id of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: int
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this CommonReturnsCompanyItemFbs.

        Идентификатор товара.  # noqa: E501

        :param product_id: The product_id of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: int
        """

        self._product_id = product_id

    @property
    def product_name(self):
        """Gets the product_name of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Наименование товара.  # noqa: E501

        :return: The product_name of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: str
        """
        return self._product_name

    @product_name.setter
    def product_name(self, product_name):
        """Sets the product_name of this CommonReturnsCompanyItemFbs.

        Наименование товара.  # noqa: E501

        :param product_name: The product_name of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: str
        """

        self._product_name = product_name

    @property
    def quantity(self):
        """Gets the quantity of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Количество товара.  # noqa: E501

        :return: The quantity of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this CommonReturnsCompanyItemFbs.

        Количество товара.  # noqa: E501

        :param quantity: The quantity of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: int
        """

        self._quantity = quantity

    @property
    def return_barcode(self):
        """Gets the return_barcode of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Штрихкод на этикетке возвратного отправления. Используйте значение этого параметра для работы с этикеткой возвратов.  # noqa: E501

        :return: The return_barcode of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: str
        """
        return self._return_barcode

    @return_barcode.setter
    def return_barcode(self, return_barcode):
        """Sets the return_barcode of this CommonReturnsCompanyItemFbs.

        Штрихкод на этикетке возвратного отправления. Используйте значение этого параметра для работы с этикеткой возвратов.  # noqa: E501

        :param return_barcode: The return_barcode of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: str
        """

        self._return_barcode = return_barcode

    @property
    def return_clearing_id(self):
        """Gets the return_clearing_id of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Идентификатор грузоместа в логистической системе Ozon.  # noqa: E501

        :return: The return_clearing_id of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: int
        """
        return self._return_clearing_id

    @return_clearing_id.setter
    def return_clearing_id(self, return_clearing_id):
        """Sets the return_clearing_id of this CommonReturnsCompanyItemFbs.

        Идентификатор грузоместа в логистической системе Ozon.  # noqa: E501

        :param return_clearing_id: The return_clearing_id of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: int
        """

        self._return_clearing_id = return_clearing_id

    @property
    def return_date(self):
        """Gets the return_date of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Дата возврата товара.  # noqa: E501

        :return: The return_date of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: str
        """
        return self._return_date

    @return_date.setter
    def return_date(self, return_date):
        """Sets the return_date of this CommonReturnsCompanyItemFbs.

        Дата возврата товара.  # noqa: E501

        :param return_date: The return_date of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: str
        """

        self._return_date = return_date

    @property
    def return_reason_name(self):
        """Gets the return_reason_name of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Причина возврата.  # noqa: E501

        :return: The return_reason_name of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: str
        """
        return self._return_reason_name

    @return_reason_name.setter
    def return_reason_name(self, return_reason_name):
        """Sets the return_reason_name of this CommonReturnsCompanyItemFbs.

        Причина возврата.  # noqa: E501

        :param return_reason_name: The return_reason_name of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: str
        """

        self._return_reason_name = return_reason_name

    @property
    def waiting_for_seller_date_time(self):
        """Gets the waiting_for_seller_date_time of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Дата готовности выдачи товара продавцу.  # noqa: E501

        :return: The waiting_for_seller_date_time of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: str
        """
        return self._waiting_for_seller_date_time

    @waiting_for_seller_date_time.setter
    def waiting_for_seller_date_time(self, waiting_for_seller_date_time):
        """Sets the waiting_for_seller_date_time of this CommonReturnsCompanyItemFbs.

        Дата готовности выдачи товара продавцу.  # noqa: E501

        :param waiting_for_seller_date_time: The waiting_for_seller_date_time of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: str
        """

        self._waiting_for_seller_date_time = waiting_for_seller_date_time

    @property
    def returned_to_seller_date_time(self):
        """Gets the returned_to_seller_date_time of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Дата выдачи товара продавцу.  # noqa: E501

        :return: The returned_to_seller_date_time of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: str
        """
        return self._returned_to_seller_date_time

    @returned_to_seller_date_time.setter
    def returned_to_seller_date_time(self, returned_to_seller_date_time):
        """Sets the returned_to_seller_date_time of this CommonReturnsCompanyItemFbs.

        Дата выдачи товара продавцу.  # noqa: E501

        :param returned_to_seller_date_time: The returned_to_seller_date_time of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: str
        """

        self._returned_to_seller_date_time = returned_to_seller_date_time

    @property
    def waiting_for_seller_days(self):
        """Gets the waiting_for_seller_days of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Срок хранения возврата в днях.  # noqa: E501

        :return: The waiting_for_seller_days of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: int
        """
        return self._waiting_for_seller_days

    @waiting_for_seller_days.setter
    def waiting_for_seller_days(self, waiting_for_seller_days):
        """Sets the waiting_for_seller_days of this CommonReturnsCompanyItemFbs.

        Срок хранения возврата в днях.  # noqa: E501

        :param waiting_for_seller_days: The waiting_for_seller_days of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: int
        """

        self._waiting_for_seller_days = waiting_for_seller_days

    @property
    def returns_keeping_cost(self):
        """Gets the returns_keeping_cost of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Стоимость хранения возврата.  # noqa: E501

        :return: The returns_keeping_cost of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: float
        """
        return self._returns_keeping_cost

    @returns_keeping_cost.setter
    def returns_keeping_cost(self, returns_keeping_cost):
        """Sets the returns_keeping_cost of this CommonReturnsCompanyItemFbs.

        Стоимость хранения возврата.  # noqa: E501

        :param returns_keeping_cost: The returns_keeping_cost of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: float
        """

        self._returns_keeping_cost = returns_keeping_cost

    @property
    def sku(self):
        """Gets the sku of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Идентификатор товара на Ozon.  # noqa: E501

        :return: The sku of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: int
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this CommonReturnsCompanyItemFbs.

        Идентификатор товара на Ozon.  # noqa: E501

        :param sku: The sku of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: int
        """

        self._sku = sku

    @property
    def status(self):
        """Gets the status of this CommonReturnsCompanyItemFbs.  # noqa: E501

        Статус возврата.  # noqa: E501

        :return: The status of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CommonReturnsCompanyItemFbs.

        Статус возврата.  # noqa: E501

        :param status: The status of this CommonReturnsCompanyItemFbs.  # noqa: E501
        :type: str
        """

        self._status = status

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CommonReturnsCompanyItemFbs, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CommonReturnsCompanyItemFbs):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
