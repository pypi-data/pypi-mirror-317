# coding: utf-8

"""
    Документация Ozon Seller API

    По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru)  > [Информационная платформа и сообщество разработчиков Ozon for Dev](https://dev.ozon.ru/)   # noqa: E501

    OpenAPI spec version: 2.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class V1GetSupplyOrderResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'created_at': 'str',
        'local_timeslot': 'V1Timeslot',
        'preferred_supply_date_from': 'str',
        'preferred_supply_date_to': 'str',
        'seller_warehouse': 'V1SellerWarehouse',
        'state': 'str',
        'supply_order_id': 'int',
        'supply_order_number': 'str',
        'supply_warehouse': 'V1Warehouse',
        'time_left_to_prepare_supply': 'int',
        'time_left_to_select_supply_variant': 'int',
        'total_items_count': 'int',
        'total_quantity': 'int',
        'vehicle_info': 'V1VehicleInfo'
    }

    attribute_map = {
        'created_at': 'created_at',
        'local_timeslot': 'local_timeslot',
        'preferred_supply_date_from': 'preferred_supply_date_from',
        'preferred_supply_date_to': 'preferred_supply_date_to',
        'seller_warehouse': 'seller_warehouse',
        'state': 'state',
        'supply_order_id': 'supply_order_id',
        'supply_order_number': 'supply_order_number',
        'supply_warehouse': 'supply_warehouse',
        'time_left_to_prepare_supply': 'time_left_to_prepare_supply',
        'time_left_to_select_supply_variant': 'time_left_to_select_supply_variant',
        'total_items_count': 'total_items_count',
        'total_quantity': 'total_quantity',
        'vehicle_info': 'vehicle_info'
    }

    def __init__(self, created_at=None, local_timeslot=None, preferred_supply_date_from=None, preferred_supply_date_to=None, seller_warehouse=None, state=None, supply_order_id=None, supply_order_number=None, supply_warehouse=None, time_left_to_prepare_supply=None, time_left_to_select_supply_variant=None, total_items_count=None, total_quantity=None, vehicle_info=None):  # noqa: E501
        """V1GetSupplyOrderResponse - a model defined in Swagger"""  # noqa: E501
        self._created_at = None
        self._local_timeslot = None
        self._preferred_supply_date_from = None
        self._preferred_supply_date_to = None
        self._seller_warehouse = None
        self._state = None
        self._supply_order_id = None
        self._supply_order_number = None
        self._supply_warehouse = None
        self._time_left_to_prepare_supply = None
        self._time_left_to_select_supply_variant = None
        self._total_items_count = None
        self._total_quantity = None
        self._vehicle_info = None
        self.discriminator = None
        if created_at is not None:
            self.created_at = created_at
        if local_timeslot is not None:
            self.local_timeslot = local_timeslot
        if preferred_supply_date_from is not None:
            self.preferred_supply_date_from = preferred_supply_date_from
        if preferred_supply_date_to is not None:
            self.preferred_supply_date_to = preferred_supply_date_to
        if seller_warehouse is not None:
            self.seller_warehouse = seller_warehouse
        if state is not None:
            self.state = state
        if supply_order_id is not None:
            self.supply_order_id = supply_order_id
        if supply_order_number is not None:
            self.supply_order_number = supply_order_number
        if supply_warehouse is not None:
            self.supply_warehouse = supply_warehouse
        if time_left_to_prepare_supply is not None:
            self.time_left_to_prepare_supply = time_left_to_prepare_supply
        if time_left_to_select_supply_variant is not None:
            self.time_left_to_select_supply_variant = time_left_to_select_supply_variant
        if total_items_count is not None:
            self.total_items_count = total_items_count
        if total_quantity is not None:
            self.total_quantity = total_quantity
        if vehicle_info is not None:
            self.vehicle_info = vehicle_info

    @property
    def created_at(self):
        """Gets the created_at of this V1GetSupplyOrderResponse.  # noqa: E501

        Дата создания заявки на поставку.  # noqa: E501

        :return: The created_at of this V1GetSupplyOrderResponse.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this V1GetSupplyOrderResponse.

        Дата создания заявки на поставку.  # noqa: E501

        :param created_at: The created_at of this V1GetSupplyOrderResponse.  # noqa: E501
        :type: str
        """

        self._created_at = created_at

    @property
    def local_timeslot(self):
        """Gets the local_timeslot of this V1GetSupplyOrderResponse.  # noqa: E501


        :return: The local_timeslot of this V1GetSupplyOrderResponse.  # noqa: E501
        :rtype: V1Timeslot
        """
        return self._local_timeslot

    @local_timeslot.setter
    def local_timeslot(self, local_timeslot):
        """Sets the local_timeslot of this V1GetSupplyOrderResponse.


        :param local_timeslot: The local_timeslot of this V1GetSupplyOrderResponse.  # noqa: E501
        :type: V1Timeslot
        """

        self._local_timeslot = local_timeslot

    @property
    def preferred_supply_date_from(self):
        """Gets the preferred_supply_date_from of this V1GetSupplyOrderResponse.  # noqa: E501

        Дата, с которой вы хотите привезти поставку на склад. Только для заявок с вРЦ.  # noqa: E501

        :return: The preferred_supply_date_from of this V1GetSupplyOrderResponse.  # noqa: E501
        :rtype: str
        """
        return self._preferred_supply_date_from

    @preferred_supply_date_from.setter
    def preferred_supply_date_from(self, preferred_supply_date_from):
        """Sets the preferred_supply_date_from of this V1GetSupplyOrderResponse.

        Дата, с которой вы хотите привезти поставку на склад. Только для заявок с вРЦ.  # noqa: E501

        :param preferred_supply_date_from: The preferred_supply_date_from of this V1GetSupplyOrderResponse.  # noqa: E501
        :type: str
        """

        self._preferred_supply_date_from = preferred_supply_date_from

    @property
    def preferred_supply_date_to(self):
        """Gets the preferred_supply_date_to of this V1GetSupplyOrderResponse.  # noqa: E501

        Дата, до которой вы хотите привезти поставку на склад. Только для заявок с вРЦ.  # noqa: E501

        :return: The preferred_supply_date_to of this V1GetSupplyOrderResponse.  # noqa: E501
        :rtype: str
        """
        return self._preferred_supply_date_to

    @preferred_supply_date_to.setter
    def preferred_supply_date_to(self, preferred_supply_date_to):
        """Sets the preferred_supply_date_to of this V1GetSupplyOrderResponse.

        Дата, до которой вы хотите привезти поставку на склад. Только для заявок с вРЦ.  # noqa: E501

        :param preferred_supply_date_to: The preferred_supply_date_to of this V1GetSupplyOrderResponse.  # noqa: E501
        :type: str
        """

        self._preferred_supply_date_to = preferred_supply_date_to

    @property
    def seller_warehouse(self):
        """Gets the seller_warehouse of this V1GetSupplyOrderResponse.  # noqa: E501


        :return: The seller_warehouse of this V1GetSupplyOrderResponse.  # noqa: E501
        :rtype: V1SellerWarehouse
        """
        return self._seller_warehouse

    @seller_warehouse.setter
    def seller_warehouse(self, seller_warehouse):
        """Sets the seller_warehouse of this V1GetSupplyOrderResponse.


        :param seller_warehouse: The seller_warehouse of this V1GetSupplyOrderResponse.  # noqa: E501
        :type: V1SellerWarehouse
        """

        self._seller_warehouse = seller_warehouse

    @property
    def state(self):
        """Gets the state of this V1GetSupplyOrderResponse.  # noqa: E501

        Статус поставки по заявке: - `DRAFT` — черновик заявки. Только для заявок с вРЦ. - `SUPPLY_VARIANTS_ARRANGING` — подбор вариантов отгрузки. Только для заявок с вРЦ. - `HAS_NO_SUPPLY_VARIANTS_ARCHIVE` — нет вариантов отгрузки. Заявка в архиве. - `HAS_NO_SUPPLY_VARIANTS_NEW` — нет вариантов отгрузки. - `SUPPLY_VARIANT_CONFIRMATION` — согласование отгрузки. Только для заявок с вРЦ. - `TIMESLOT_BOOKING` — бронирование времени. - `DATA_FILLING` — заполнение данных. - `READY_TO_SUPPLY` — готова к отгрузке. - `ACCEPTED_AT_SUPPLY_WAREHOUSE` — принята на точке отгрузки. - `IN_TRANSIT` — в пути. - `ACCEPTANCE_AT_STORAGE_WAREHOUSE` — приёмка на складе. - `REPORTS_CONFIRMATION_AWAITING` — согласование актов. - `REPORT_REJECTED` — спор. - `COMPLETED` — завершена. - `REJECTED_AT_SUPPLY_WAREHOUSE` — отказано в приёмке. - `CANCELLED` — отменена. - `OVERDUE` — просрочена.   # noqa: E501

        :return: The state of this V1GetSupplyOrderResponse.  # noqa: E501
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this V1GetSupplyOrderResponse.

        Статус поставки по заявке: - `DRAFT` — черновик заявки. Только для заявок с вРЦ. - `SUPPLY_VARIANTS_ARRANGING` — подбор вариантов отгрузки. Только для заявок с вРЦ. - `HAS_NO_SUPPLY_VARIANTS_ARCHIVE` — нет вариантов отгрузки. Заявка в архиве. - `HAS_NO_SUPPLY_VARIANTS_NEW` — нет вариантов отгрузки. - `SUPPLY_VARIANT_CONFIRMATION` — согласование отгрузки. Только для заявок с вРЦ. - `TIMESLOT_BOOKING` — бронирование времени. - `DATA_FILLING` — заполнение данных. - `READY_TO_SUPPLY` — готова к отгрузке. - `ACCEPTED_AT_SUPPLY_WAREHOUSE` — принята на точке отгрузки. - `IN_TRANSIT` — в пути. - `ACCEPTANCE_AT_STORAGE_WAREHOUSE` — приёмка на складе. - `REPORTS_CONFIRMATION_AWAITING` — согласование актов. - `REPORT_REJECTED` — спор. - `COMPLETED` — завершена. - `REJECTED_AT_SUPPLY_WAREHOUSE` — отказано в приёмке. - `CANCELLED` — отменена. - `OVERDUE` — просрочена.   # noqa: E501

        :param state: The state of this V1GetSupplyOrderResponse.  # noqa: E501
        :type: str
        """

        self._state = state

    @property
    def supply_order_id(self):
        """Gets the supply_order_id of this V1GetSupplyOrderResponse.  # noqa: E501

        Идентификатор заявки на поставку.  # noqa: E501

        :return: The supply_order_id of this V1GetSupplyOrderResponse.  # noqa: E501
        :rtype: int
        """
        return self._supply_order_id

    @supply_order_id.setter
    def supply_order_id(self, supply_order_id):
        """Sets the supply_order_id of this V1GetSupplyOrderResponse.

        Идентификатор заявки на поставку.  # noqa: E501

        :param supply_order_id: The supply_order_id of this V1GetSupplyOrderResponse.  # noqa: E501
        :type: int
        """

        self._supply_order_id = supply_order_id

    @property
    def supply_order_number(self):
        """Gets the supply_order_number of this V1GetSupplyOrderResponse.  # noqa: E501

        Номер заявки на поставку.  # noqa: E501

        :return: The supply_order_number of this V1GetSupplyOrderResponse.  # noqa: E501
        :rtype: str
        """
        return self._supply_order_number

    @supply_order_number.setter
    def supply_order_number(self, supply_order_number):
        """Sets the supply_order_number of this V1GetSupplyOrderResponse.

        Номер заявки на поставку.  # noqa: E501

        :param supply_order_number: The supply_order_number of this V1GetSupplyOrderResponse.  # noqa: E501
        :type: str
        """

        self._supply_order_number = supply_order_number

    @property
    def supply_warehouse(self):
        """Gets the supply_warehouse of this V1GetSupplyOrderResponse.  # noqa: E501


        :return: The supply_warehouse of this V1GetSupplyOrderResponse.  # noqa: E501
        :rtype: V1Warehouse
        """
        return self._supply_warehouse

    @supply_warehouse.setter
    def supply_warehouse(self, supply_warehouse):
        """Sets the supply_warehouse of this V1GetSupplyOrderResponse.


        :param supply_warehouse: The supply_warehouse of this V1GetSupplyOrderResponse.  # noqa: E501
        :type: V1Warehouse
        """

        self._supply_warehouse = supply_warehouse

    @property
    def time_left_to_prepare_supply(self):
        """Gets the time_left_to_prepare_supply of this V1GetSupplyOrderResponse.  # noqa: E501

        Время в секундах, оставшееся на заполнение данных по поставке. Только для заявок с вРЦ.  # noqa: E501

        :return: The time_left_to_prepare_supply of this V1GetSupplyOrderResponse.  # noqa: E501
        :rtype: int
        """
        return self._time_left_to_prepare_supply

    @time_left_to_prepare_supply.setter
    def time_left_to_prepare_supply(self, time_left_to_prepare_supply):
        """Sets the time_left_to_prepare_supply of this V1GetSupplyOrderResponse.

        Время в секундах, оставшееся на заполнение данных по поставке. Только для заявок с вРЦ.  # noqa: E501

        :param time_left_to_prepare_supply: The time_left_to_prepare_supply of this V1GetSupplyOrderResponse.  # noqa: E501
        :type: int
        """

        self._time_left_to_prepare_supply = time_left_to_prepare_supply

    @property
    def time_left_to_select_supply_variant(self):
        """Gets the time_left_to_select_supply_variant of this V1GetSupplyOrderResponse.  # noqa: E501

        Время в секундах, оставшееся на выбор варианта отгрузки. Только для заявок с вРЦ.  # noqa: E501

        :return: The time_left_to_select_supply_variant of this V1GetSupplyOrderResponse.  # noqa: E501
        :rtype: int
        """
        return self._time_left_to_select_supply_variant

    @time_left_to_select_supply_variant.setter
    def time_left_to_select_supply_variant(self, time_left_to_select_supply_variant):
        """Sets the time_left_to_select_supply_variant of this V1GetSupplyOrderResponse.

        Время в секундах, оставшееся на выбор варианта отгрузки. Только для заявок с вРЦ.  # noqa: E501

        :param time_left_to_select_supply_variant: The time_left_to_select_supply_variant of this V1GetSupplyOrderResponse.  # noqa: E501
        :type: int
        """

        self._time_left_to_select_supply_variant = time_left_to_select_supply_variant

    @property
    def total_items_count(self):
        """Gets the total_items_count of this V1GetSupplyOrderResponse.  # noqa: E501

        Количество товаров в заявке.  # noqa: E501

        :return: The total_items_count of this V1GetSupplyOrderResponse.  # noqa: E501
        :rtype: int
        """
        return self._total_items_count

    @total_items_count.setter
    def total_items_count(self, total_items_count):
        """Sets the total_items_count of this V1GetSupplyOrderResponse.

        Количество товаров в заявке.  # noqa: E501

        :param total_items_count: The total_items_count of this V1GetSupplyOrderResponse.  # noqa: E501
        :type: int
        """

        self._total_items_count = total_items_count

    @property
    def total_quantity(self):
        """Gets the total_quantity of this V1GetSupplyOrderResponse.  # noqa: E501

        Общее количеств единиц товара в заявке.  # noqa: E501

        :return: The total_quantity of this V1GetSupplyOrderResponse.  # noqa: E501
        :rtype: int
        """
        return self._total_quantity

    @total_quantity.setter
    def total_quantity(self, total_quantity):
        """Sets the total_quantity of this V1GetSupplyOrderResponse.

        Общее количеств единиц товара в заявке.  # noqa: E501

        :param total_quantity: The total_quantity of this V1GetSupplyOrderResponse.  # noqa: E501
        :type: int
        """

        self._total_quantity = total_quantity

    @property
    def vehicle_info(self):
        """Gets the vehicle_info of this V1GetSupplyOrderResponse.  # noqa: E501


        :return: The vehicle_info of this V1GetSupplyOrderResponse.  # noqa: E501
        :rtype: V1VehicleInfo
        """
        return self._vehicle_info

    @vehicle_info.setter
    def vehicle_info(self, vehicle_info):
        """Sets the vehicle_info of this V1GetSupplyOrderResponse.


        :param vehicle_info: The vehicle_info of this V1GetSupplyOrderResponse.  # noqa: E501
        :type: V1VehicleInfo
        """

        self._vehicle_info = vehicle_info

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(V1GetSupplyOrderResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, V1GetSupplyOrderResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
