name: Core CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Install Python
        run: uv python install ${{ matrix.python-version }}

      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Spin up DB in background
        run: |
          docker-compose pull db
          docker-compose build db
          docker-compose up -d db

      - name: Wait for DB to be ready
        run: |
          docker-compose exec -T db bash -c "until pg_isready -h localhost -p 5432; do sleep 1; done"

      - name: Install pg_cron
        run: |
          docker-compose exec -T db bash -c "psql -U postgres -d postgres -c 'CREATE EXTENSION pg_cron;'"

      - name: Check Environment
        run: |
          docker-compose run --rm app env

      - name: Run migrations
        run: |
          docker-compose run --rm \
            -v ${{ github.workspace }}:/app \
            -w /app \
            app uv run python3 manage.py migrate
      
      - name: Run tests
        run: |
          docker-compose run --rm \
            -v ${{ github.workspace }}:/app \
            -w /app \
            app uv run --python ${{ matrix.python-version }} pytest -s
    

      - name: Stop services
        if: always()
        run: docker-compose down
        

  lint-ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Run ruff
        run: |
          uv run ruff check .
          uv run ruff format --check

  lint-pyright:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Run pyright
        run: uv run pyright
