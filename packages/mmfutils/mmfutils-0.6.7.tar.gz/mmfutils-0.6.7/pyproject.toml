[tool.poetry]
name = "mmfutils"
version = "0.6.7"
description = "Small set of utilities: containers and interfaces."
authors = ["Michael McNeil Forbes <michael.forbes+python@gmail.com>"]
license = "BSD-3"
readme = "description.md"
repository = "https://alum.mit.edu/www/mforbes/hg/forbes-group/mmfutils"
documentation = "http://mmfutils.readthedocs.org"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]


[tool.poetry.dependencies]
python = ">3.9,<3.14"
"zope.interface" = ">=5.4.0"
husl = ">=4.0.3"
importlib-metadata = {version = ">=4.13.0", python="<3.8"}

# Optional dependencies for testing, building the docs, etc.
Sphinx = { version = ">=5.0", optional = true}
ipyparallel = {version = ">=8.4.1", optional = true}
mmf-setup = {version = ">=0.4.6", optional = true}
mock = {version = ">=4.0.3", optional = true}
nbconvert = {version = ">=7.2.7", optional = true}
numba = [
    {version = ">=0.56.4", python = "<3.8", optional = true},
    {version = ">=0.57.0", python = ">=3.8", optional = true}
]
numexpr = {version = ">=2.8.1", optional = true}
persist = {version = ">=3.0", optional = true}
psutil = {version = ">=5.9.1", optional = true}
pyFFTW = [
    {version = ">=0.13.0", python = "<3.8", optional = true},
    # Depend on source until the fix for https://github.com/pyFFTW/pyFFTW/issues/303 is released
    #{version = ">0.13.1", python = ">=3.8", optional = true}
    #{ git = "https://github.com/pyFFTW/pyFFTW.git", branch= "master", python = ">=3.8", optional = true}
    # See https://github.com/pyFFTW/pyFFTW/pull/363
    #{ git = "https://github.com/karlotness/pyFFTW.git", branch = "linker-flags", python = ">=3.8", optional = true}
]
pytest = {version = ">=7.1.2", optional = true}
pytest-cov = {version = ">=3.0.0", optional = true}
#docutils = {version = ">=0.20.1", optional = true}
docutils = {version = ">=0.18.1", optional = true}
sphinx-rtd-theme = {version = ">=1.2.1", optional = true}
sphinxcontrib-zopeext = {version = ">=0.4.3", optional = true}
uncertainties = {version = ">=3.1.5", optional = true}
pytest-rerunfailures = {version = ">=11.1.2", optional = true}

# https://numpy.org/doc/stable/release/1.22.0-notes.html#python-3-7-is-no-longer-supported
numpy = [
    {version = ">=1.20.2,<1.22.0", python="<3.8", optional = true},
    {version = ">=1.23.5", python=">=3.8", optional = true},
]

# https://matplotlib.org/stable/api/prev_api_changes/api_changes_3.6.0.html#increase-to-minimum-supported-versions-of-dependencies
matplotlib = [
    {version = ">=3.5.3", python="<3.8", optional = true},
    {version = ">=3.6.2", python=">=3.8", optional = true},
]
scipy = [
    {version = ">=1.7.3", python=">=3.7,<3.8", optional = true},
    {version = ">=1.8.1", python=">=3.8", optional = true},
    {version = ">=1.10.1", python=">=3.11", optional = true},
]

sympy = [
    {version = ">=1.12", python=">=3.8", optional = true},
]
jupytext = {version = ">=1.14.7", optional = true }
notebook = {version = ">=6.5.4", optional = true }
ipywidgets = {version = ">=8.0.6", optional = true}
more-itertools = "^10.1.0"

[tool.poetry.extras]
all = [
    "docutils",                 # Used by interfaces
    "uncertainties",            # Used by optimize
    "ipyparallel",              # Used by parallel
    "matplotlib",               # Used by plot
    "pyFFTW",                   # Used by performance
    "numexpr",                  # Used by performance
    "scipy",                    # Used by math, solve, plot, optimize, performance
    # "numba",  # Only used for ssum... which is a proof of principle.
]
test = [
    "pytest",
    "pytest-cov",
    "pytest-flake8",
    "pytest-xdist",
    "pytest-rerunfailures",
    "ipyparallel",
    "persist",
    "scipy",
    "matplotlib",
    "numexpr",
    "uncertainties",
    "pyFFTW",
    "numba",
    "docutils",
    "psutil",

    "jupytext",
    "notebook",
    "ipywidgets",
    "sympy",
]

doc = [
    "Sphinx",
    "mock",
    #"sphinx-rtd-theme",
    "sphinxcontrib.zopeext",
    "numpy",
    "matplotlib",
    "mmf_setup",
    "nbconvert",
]

[tool.poetry.urls]
"Issues" = "https://alum.mit.edu/www/mforbes/hg/forbes-group/mmfutils/issues"
"Git Mirror" = "https://github.com/forbes-group/mmfutils"

[tool.poetry.dev-dependencies]
ipython = [
    {version = ">=7.34.0", python="<3.8"},
    {version = "*", python=">=3.8"}
]
traitlets = { version = "*", python = ">=3.8" }
nbconvert = ">=7.2.7"
pandoc = ">=2.3"


#black = ">=21.4b2"
#mercurial = { version = ">=5.7.1", optional = true }
#hg-git = { version = ">=0.10.0", optional = true }
#hg-evolve = { version = ">=10.3.1", optional = true }
#nbconvert = ">=6.0.7"

# These are installed by mmf_setup, but we include them here for demonstration purposes.
# [tools.poetry.scripts]
# mmf_setup = "mmf_setup.cli.mmf_setup:main"
# mmf_initial_setup = "mmf_setup.cli.mmf_initial_setup:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

######################################################################
# PyTest
[tool.pytest.ini_options]
# Note: see the discussion in https://github.com/pytest-dev/pytest/issues/2042
# If your doctests are installed, then you should provide the module here (mmfutils)
# and add --pyargs to the options below.  Otherwise, you will get ImportMismatchError
# for the doctests.
testpaths = [ "mmfutils", "tests" ]
#testpaths = [ "src/mmfutils", "tests" ]
markers = [
    # mark test as a benchmark.  (Might be slow, or platform dependent)
    "bench",
    # mark test as slow.
    "slow",
]
addopts = [
    "--pyargs",
    "-m not bench",
    "--doctest-modules",
    "--cov",
    "--cov-report=html",
    "--cov-fail-under=80",
    "--no-cov-on-fail",
    "--cov-append",
    #"-x",
    #"--pdb",
    #"--flake8",  # Disable until https://github.com/tholo/pytest-flake8/issues/8
]

doctest_optionflags = [
    "ELLIPSIS",
    "NORMALIZE_WHITESPACE"
    ]

######################################################################
# Black
[tool.black]
exclude = '''
    /(
        \.git
      | \.hg
      | \.nox
      | \.venv
      | _build
      | build
      | dist
    )/
'''