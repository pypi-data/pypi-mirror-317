name: Upload Python Package

on:
  push:
    branches: [ main]

permissions:
  contents: read

jobs:
  formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Install black
        run: pip install black
      - name: Check code formatting
        run: black --check .

  # build:
  #   needs: formatting
  #   runs-on: ${{ matrix.os }}
  #   env:
  #     PRODUCT_TYPE: scalegen
  #   continue-on-error: false
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest, macos-13]
  #       python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #         submodules: 'recursive'
  #         token: ${{ secrets.ACCESS_TOKEN }}

  #     # - name: Set version
  #       # run: echo "APP_VERSION=$(git describe --tags)" >> $GITHUB_ENV
  #       # run: echo "APP_VERSION=0.0.1" >> $GITHUB_ENV

  #     - name: Set up Python
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: ${{ matrix.python-version }}
          
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install build requests wheel setuptools
      
  #     - name: Build package
  #       run: |
  #         python make_toml.py
  #         python -m build
      
  #     - name: Install package
  #       run: pip install .
      
  #     - name: Run test
  #       run: |
  #         scalegen --help
      
  #     - name: Check if any test passed
  #       shell: bash
  #       run: |
  #         if [ "${{ job.status }}" == 'failure' ]; then
  #           echo "All tests failed"
  #           exit 1
  #         fi

  publish:
    needs: formatting
    runs-on: ubuntu-latest
    env:
      PRODUCT_TYPE: scalegen
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'
          token: ${{ secrets.ACCESS_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build requests wheel setuptools jinja2
      
      - name: Build package
        run: |
          python make_toml.py
          python -m build
      
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
      
      

  verify:
    needs: publish
    runs-on: ${{ matrix.os }}
    continue-on-error: false
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    steps:
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Verify package
        run: |
          echo "Waiting for the package to be available on PyPI..."
          sleep 20
          pip install --default-timeout=300 --index-url https://pypi.org/simple scalegen-cli
          scalegen --help
