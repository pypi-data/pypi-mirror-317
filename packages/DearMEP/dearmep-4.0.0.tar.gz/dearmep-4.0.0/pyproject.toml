# SPDX-FileCopyrightText: © 2022 Tim Weber
# SPDX-FileCopyrightText: © 2023 Jörn Bethune
# SPDX-FileCopyrightText: © 2023 iameru
#
# SPDX-License-Identifier: AGPL-3.0-or-later

[project]
name = "DearMEP"
version = "4.0.0"
description = "DearMEP helps people contact their representatives."
requires-python = ">=3.9,<4"
authors = [
	{name = "Tim Weber"},
	{name = "Tobias Mühlberger"},
	{name = "iameru"},
	{name = "Philipp Aaron Becker"},
	{name = "Jörn Bethune"},
]
maintainers = [
	{name = "Tim Weber"},
]
readme = "README.md"
classifiers = [
	"Development Status :: 5 - Production/Stable",
	"Environment :: Console",
	"Environment :: Web Environment",
	"Framework :: FastAPI",
	"License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
	"Operating System :: POSIX",
	"Programming Language :: Python :: 3 :: Only",
	"Programming Language :: Python :: 3.9",
	"Programming Language :: Python :: 3.10",
	"Programming Language :: Python :: 3.11",
	"Programming Language :: Python :: 3.12",
	"Programming Language :: Python :: 3.13",
	"Topic :: Communications :: Telephony",
]
dependencies = [
	"alembic~=1.12.1",
	"backoff~=2.2.1",
	"canonicaljson~=2.0.0",
	"countryguess~=0.3.0",
	"defusedxml~=0.7.1",
	"fastapi-restful~=0.5.0",
	"fastapi~=0.115.6",
	"httpx~=0.23.3",
	"jinja2~=3.1.4",
	"limits~=3.14",
	"lzip~=1.2.0",
	"markdown-it-py~=2.2.0",
	"phonenumbers~=8.13.22",
	"pillow~=11.0",
	"pydantic>=1.10.16,<2",
	"python-dotenv~=1.0.0",
	"python-geoacumen>=2023",
	"python-multipart~=0.0.20",
	"pytz~=2023.3.post1",
	"pyyaml~=6.0",
	"ratelimit~=2.2.1",
	"rich~=13.9",
	"sqlmodel<0.0.11",
	"starlette-exporter~=0.15.1",
	"uvicorn[standard]~=0.32",
	"pyjwt>=2.10.1",
]

[project.urls]
homepage = "https://dearmep.eu/"
source = "https://github.com/AKVorrat/dearmep"
documentation = "https://github.com/AKVorrat/dearmep/blob/main/README.md"
issues = "https://github.com/AKVorrat/dearmep/issues"

[dependency-groups]
dev = [
	"mypy~=1.13.0",
	"py-mmdb-encoder~=1.0.4",
	"pytest-cov~=4.0.0",
	"pytest<8",
	"ruff~=0.8.2",
	"types-attrs~=19.1.0",
	"types-defusedxml~=0.7.0.20240218",
	"types-maxminddb~=1.5.0",
	"types-pillow~=9.5.0.5",
	"types-pytz~=2023.3.1.1",
	"types-pyyaml~=6.0.12.2",
]

[project.scripts]
dearmep = "dearmep.cli:run"

[project.optional-dependencies]
# Pretty loose version requirements in the `convert` extra for dependencies not
# used in code, which are only here for interactive use by someone setting up a
# campaign. Tighter version constraints for things used in an actual script.
convert = [
	"csvkit>=2",
	"visidata>=3",
	"xlsxwriter~=3.1",
]
specs = [
	"eralchemy2~=1.4",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
package = true
constraint-dependencies = [
	"cffi>=1.16.0",
	"certifi>=2024.7.4",
	"greenlet>=3.1",
	"idna>=3.7",
	"typing_extensions>=4.12.0",
	"zipp>=3.19.1",
]

[tool.hatch.build]
# Include the frontend in distributions.
artifacts = [
	"dearmep/static_files/static/**/*",
]

[tool.mypy]
packages = ["dearmep", "tests"]
plugins = ["pydantic.mypy"]
python_version = "3.9"
warn_return_any = true

[tool.pytest.ini_options]
addopts = "--strict-markers --junit-xml=report.xml --cov-report=term --cov-report=lcov --cov-report=xml --cov=dearmep"
markers = [
	"config_path: set a custom config YAML file name",
	"config_content: set custom config YAML data",
]

[tool.ruff]
line-length = 79
indent-width = 4
target-version = "py39"  # when changing this, check below whether some rules can be re-enabled
exclude = [
	".git",
	"migrations",
]

[tool.ruff.format]
line-ending = "lf"
# The following settings are the defaults anyway.
indent-style = "space"
quote-style = "double"

[tool.ruff.lint]
preview = true
select = [
	"ANN",     # flake8-annotations
	"ARG",     # flake8-unused-arguments
	"ASYNC",   # flake8-async
	"B",       # flake8-bugbear
	"C4",      # flake8-comprehensions
	"C90",     # mccabe complexity
	"DTZ",     # flake8-datetimez (naive datetimes)
	"E",       # pycodestyle errors
	"ERA",     # eradicate (commented-out code)
	"EXE",     # flake8-executable (shebang lines)
	"F",       # pyflakes
	"FA",      # flake8-future-annotations
	"FURB",    # refurb
	"I",       # isort
	"INP",     # flake8-no-pep420 (implicit namespace package)
	"ISC",     # flake8-implicit-str-concat
	"LOG",     # flake8-logging
	"N",       # pep8-naming
	"PL",      # pylint
	"PT",      # flake8-pytest-style
	"PTH",     # flake8-use-pathlib
	"Q",       # flake8-quotes
	"RET",     # flake8-return
	"RSE",     # flake8-raise
	"RUF",     # Ruff-specific rules
	"S",       # flake8-bandit (security)
	"SIM",     # flake8-simplify
	"SLF",     # flake8-self (private member access)
	"SLOT",    # flake8-slots
	"TCH",     # flake8-type-checking
	"TRY",     # tryceratops
	"T20",     # flake8-print
	"UP",      # pyupgrade
	"W",       # pycodestyle warnings
]
ignore = [
	"ISC001",   # conflict w/ formatter, see https://github.com/astral-sh/ruff/issues/8272
	"PLC0415",  # forbids dynamic imports
	"PT006",    # forbids comma-separated string for @pytest.mark.parametrize names
	"PT007",    # forbids non-list types for @pytest.mark.parametrize values
	"RUF001",   # complains about Unicode typography in strings
	"RUF002",   # complains about Unicode typography in docstrings
	"RUF200",   # requires a name for projects
	"TRY003",   # complains about simple ValueError messages
	# to be re-enabled when minimum Python version is >= 3.10
	"FA100",    # suggests `from __future__ import annotations`, which causes trouble in SQLModel <https://github.com/tiangolo/sqlmodel/issues/196>
	"UP007",    # suggests X | Y annotations, which can confuse Python < 3.10
]

[tool.ruff.lint.flake8-annotations]
# Allow __init__ to omit the `-> None` return type declaration.
mypy-init-return = true

[tool.ruff.lint.flake8-bugbear]
# Allow FastAPI's request data type hints as default arguments in functions.
extend-immutable-calls = ["fastapi.Form", "fastapi.Query"]

[tool.ruff.lint.isort]
# Two blank lines after the imports.
lines-after-imports = 2

[tool.ruff.lint.pep8-naming]
# Tell Ruff that Pydantic's @validator decorator expects a class method.
# See <https://github.com/astral-sh/ruff/issues/2151>.
classmethod-decorators = ["classmethod", "pydantic.validator"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
	"ANN001",  # missing function argument annotation
	"ANN201",  # missing return type annotation
	"ARG001",  # unused function argument (e.g. require-only fixtures)
	"INP001",  # implicit namespace package
	"S101",    # use of assert
]
