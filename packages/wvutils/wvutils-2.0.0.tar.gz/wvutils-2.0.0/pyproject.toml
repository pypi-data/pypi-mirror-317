[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "wvutils"
description = "Collection of common utilities"
readme = "README.md"
requires-python = ">=3.10,<4"
license = { file = "LICENSE" }
keywords = ["utilities"]
authors = [{ name = "The Phosmic Development Team", email = "dev@phosmic.com" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Utilities",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "boto3>=1.18.44",
    "botocore>=1.21.44",
    "cloudpickle>=2.0.0",
    "google-re2>=1.0",
    "lxml>=4.6.3",
    "numpy>=1.21.2",
    "pandas>=1.3.3",
    "pyarrow>=12.0.0",
    "requests>=2.26.0",
    "s3fs>=0.4.2",
    "python-rapidjson>=1.5",
    "urllib3>=1.26.6",
]
dynamic = ["version"]

[project.urls]
homepage = "https://pypi.org/project/wvutils/"
repository = "https://github.com/Phosmic/wvutils"
issues = "https://github.com/Phosmic/wvutils/issues"

[tool.setuptools]
packages = ["wvutils"]
package-dir = { "" = "src" }

[tool.setuptools.dynamic]
version = { attr = "wvutils.__version__" }

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.paths]
source = ["src"]

[tool.coverage.report]
ignore_errors = false
show_missing = true
omit = []
exclude_lines = [
    # Have to re-enable the standard pragma:
    "pragma: no cover",
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    "AbstractMethodError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if False:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.pylint.messages_control]
max-line-length = 115
disable = []

[tool.black]
line-length = 115
target-version = ["py310", "py311", "py312"]
exclude = """
(
    asv_bench/env
  | \\.egg
  | \\.git
  | \\.hg
  | \\.mypy_cache
  | \\.nox
  | \\.tox
  | \\.venv
  | _build
  | buck-out
  | build
  | dist
  | setup.py
)
"""

[tool.mypy]
python_version = "3.10"
files = ["src"]
show_error_codes = true
pretty = true
# strict = true
allow_redefinition = true
disallow_subclassing_any = false
no_implicit_optional = true
local_partial_types = true
# no_implicit_reexport = true
strict_equality = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
warn_unreachable = true

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]
line_length = 115
multi_line_output = 3
atomic = false
include_trailing_comma = true
force_grid_wrap = 3
use_parentheses = true
balanced_wrapping = false
ensure_newline_before_comments = true
group_by_package = true
remove_redundant_aliases = false
combine_as_imports = false
honor_case_in_force_sorted_sections = true
combine_star = false
star_first = true
known_pre_core = [
    "wvutils.type_aliases",
    "wvutils.errors",
    "wvcore_domain.type_aliases",
    "wvcore_domain.errors",
]
sections = [
    "FUTURE",
    "STDLIB",
    "THIRDPARTY",
    "PRE_CORE",
    "FIRSTPARTY",
    "LOCALFOLDER",
]
# skip_glob = []


[tool.pytest.ini_options]
minversion = "7.0"
addopts = "--strict-config --strict-markers --capture=no --junitxml=test-data.xml"
empty_parameter_set_mark = "fail_at_collect"
# Must fail if any test is marked as xfail but passes
xfail_strict = true
testpaths = ["tests"]
doctest_optionflags = [
    # Ignores whitespace differences, useful for spanning multiple lines
    "NORMALIZE_WHITESPACE",
    # Ignores differences in exception messages
    "IGNORE_EXCEPTION_DETAIL",
    # Allows you to use ... in place of a value in an expected output string
    "ELLIPSIS",
]
filterwarnings = []
junit_family = "xunit2"
markers = []

[tool.codespell]
ignore-words-list = ""  # "foo, bar, baz"
ignore-regex = ""  # 'https://([\w/\.])+'
