name: build

on:
  pull_request:
    types:
      - closed
    branches: [main]

jobs:
  build-package:
    if: ${{ (github.event.pull_request.merged == true) && (contains(github.event.pull_request.labels.*.name, 'release')) }}
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: 'pip'
      - name: Install Hatch
        run: pip install hatch
      - name: Determine Version
        run: hatch version `hatch run bump-version`
      - id: version
        name: Store version number for future jobs
        run: echo "version=`hatch version`" >> "$GITHUB_OUTPUT"
      - name: Build Package
        run: hatch build
      - name: Store build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Create changelog
        run: hatch run generate-changelog
      - name: Store Changelog
        uses: actions/upload-artifact@v4
        with:
          name: changelog
          path: CHANGELOG.md
  create-release:
    if: ${{ (github.event.pull_request.merged == true) && (contains(github.event.pull_request.labels.*.name, 'release')) }}
    runs-on: ubuntu-latest
    needs:
    - build-package
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Download the changelog
        uses: actions/download-artifact@v4
        with:
          name: changelog
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create ${{ needs.build-package.outputs.version }}
          --repo '${{ github.repository }}'
          --notes-file CHANGELOG.md
          --title 'Release ${{ needs.build-package.outputs.version }}'
          --draft
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: >-
          gh release upload ${{ needs.build-package.outputs.version }} dist/**
          --repo '${{ github.repository }}'
