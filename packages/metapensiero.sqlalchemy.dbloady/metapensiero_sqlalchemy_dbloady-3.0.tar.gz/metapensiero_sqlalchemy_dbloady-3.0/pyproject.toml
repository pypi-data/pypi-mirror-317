[project]
name = "metapensiero.sqlalchemy.dbloady"
description = "YAML based data loader"
version = "3.0"
authors = [
    { name = "Lele Gaifax", email = "lele@metapensiero.it" },
]
readme = "README.rst"
classifiers = [
    "Environment :: Console",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Topic :: Database",
    "Topic :: Utilities",
]
keywords = [
    "YAML",
    "Jinja2",
    "scaffolding",
    "skeleton",
]
requires-python = ">=3.9"
dependencies = [
    "progressbar2",
    "ruamel.yaml",
    "sqlalchemy",
]

[project.license]
text = "GPL-3.0-or-later"

[project.urls]
Changelog = "https://gitlab.com/metapensiero/metapensiero.sqlalchemy.dbloady/-/blob/master/CHANGES.rst"
Source = "https://gitlab.com/metapensiero/metapensiero.sqlalchemy.dbloady"

[project.optional-dependencies]
dev = [
    "build",
    "bump2version",
    "twine",
]

[project.scripts]
dbdumpy = "metapensiero.sqlalchemy.dbloady.dump:main"
dbloady = "metapensiero.sqlalchemy.dbloady.load:main"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.pdm.build]
package-dir = "src"
includes = [
    "src/metapensiero",
]
excludes = [
    "tests/*/*.egg-info",
]
source-includes = [
    "flake.*",
    "*.rst",
    "Makefile*",
    "tests/",
]

[tool.bumpversion]
current_version = "3.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)(?:\\.(?P<pre_label>[a-zA-Z-]+)(?P<pre_number>\\d*))?"
serialize = [
    "{major}.{minor}.{pre_label}{pre_number}",
    "{major}.{minor}",
]
allow_dirty = false
commit = false
ignore_missing_files = false
ignore_missing_version = false
regex = false
sign_tags = false
tag = false

[tool.bumpversion.parts.pre_label]
values = [
    "dev",
    "final",
]
optional_value = "final"

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""
