# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from .auto_reload_plan import AutoReloadPlan
from ..core.serialization import FieldMetadata
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class AutoReloadPlanDto(UniversalBaseModel):
    auto_reload_plan: typing_extensions.Annotated[
        typing.Optional[AutoReloadPlan], FieldMetadata(alias="autoReloadPlan")
    ] = pydantic.Field(default=None)
    """
    This is the auto reload plan to be configured for the subscription.
    It can be null if no auto reload plan is set.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
