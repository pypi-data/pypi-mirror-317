"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import cosmos.base.v1beta1.coin_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import poktroll.proof.types_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _SettlementOpReason:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _SettlementOpReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SettlementOpReason.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNSPECIFIED: _SettlementOpReason.ValueType  # 0
    """UNSPECIFIED is the default value for SettlementOpReason, it is used as a field
    type for objects which need to distinguish whether a SettlementOpReason has been specified it or not.
    """
    TLM_RELAY_BURN_EQUALS_MINT_SUPPLIER_STAKE_MINT: _SettlementOpReason.ValueType  # 1
    """Value transfer (credit/debit)"""
    TLM_RELAY_BURN_EQUALS_MINT_APPLICATION_STAKE_BURN: _SettlementOpReason.ValueType  # 2
    TLM_GLOBAL_MINT_INFLATION: _SettlementOpReason.ValueType  # 3
    """Inflation"""
    TLM_RELAY_BURN_EQUALS_MINT_SUPPLIER_SHAREHOLDER_REWARD_DISTRIBUTION: _SettlementOpReason.ValueType  # 4
    """Reward distribution"""
    TLM_GLOBAL_MINT_DAO_REWARD_DISTRIBUTION: _SettlementOpReason.ValueType  # 5
    TLM_GLOBAL_MINT_PROPOSER_REWARD_DISTRIBUTION: _SettlementOpReason.ValueType  # 6
    TLM_GLOBAL_MINT_SUPPLIER_SHAREHOLDER_REWARD_DISTRIBUTION: _SettlementOpReason.ValueType  # 7
    TLM_GLOBAL_MINT_SOURCE_OWNER_REWARD_DISTRIBUTION: _SettlementOpReason.ValueType  # 8
    TLM_GLOBAL_MINT_APPLICATION_REWARD_DISTRIBUTION: _SettlementOpReason.ValueType  # 9
    TLM_GLOBAL_MINT_REIMBURSEMENT_REQUEST_ESCROW_DAO_TRANSFER: _SettlementOpReason.ValueType  # 10
    """Self-servicing mitigation"""
    UNSPECIFIED_TLM_SUPPLIER_SLASH_MODULE_TRANSFER: _SettlementOpReason.ValueType  # 11
    """Penalization"""
    UNSPECIFIED_TLM_SUPPLIER_SLASH_STAKE_BURN: _SettlementOpReason.ValueType  # 12
    TLM_GLOBAL_MINT_SUPPLIER_SHAREHOLDER_REWARD_MODULE_TRANSFER: _SettlementOpReason.ValueType  # 13
    """Module accounting"""
    TLM_GLOBAL_MINT_REIMBURSEMENT_REQUEST_ESCROW_MODULE_TRANSFER: _SettlementOpReason.ValueType  # 14

class SettlementOpReason(_SettlementOpReason, metaclass=_SettlementOpReasonEnumTypeWrapper):
    """SettlementOpReason is a distinct, tlm-specific causal reason for a given operation."""

UNSPECIFIED: SettlementOpReason.ValueType  # 0
"""UNSPECIFIED is the default value for SettlementOpReason, it is used as a field
type for objects which need to distinguish whether a SettlementOpReason has been specified it or not.
"""
TLM_RELAY_BURN_EQUALS_MINT_SUPPLIER_STAKE_MINT: SettlementOpReason.ValueType  # 1
"""Value transfer (credit/debit)"""
TLM_RELAY_BURN_EQUALS_MINT_APPLICATION_STAKE_BURN: SettlementOpReason.ValueType  # 2
TLM_GLOBAL_MINT_INFLATION: SettlementOpReason.ValueType  # 3
"""Inflation"""
TLM_RELAY_BURN_EQUALS_MINT_SUPPLIER_SHAREHOLDER_REWARD_DISTRIBUTION: SettlementOpReason.ValueType  # 4
"""Reward distribution"""
TLM_GLOBAL_MINT_DAO_REWARD_DISTRIBUTION: SettlementOpReason.ValueType  # 5
TLM_GLOBAL_MINT_PROPOSER_REWARD_DISTRIBUTION: SettlementOpReason.ValueType  # 6
TLM_GLOBAL_MINT_SUPPLIER_SHAREHOLDER_REWARD_DISTRIBUTION: SettlementOpReason.ValueType  # 7
TLM_GLOBAL_MINT_SOURCE_OWNER_REWARD_DISTRIBUTION: SettlementOpReason.ValueType  # 8
TLM_GLOBAL_MINT_APPLICATION_REWARD_DISTRIBUTION: SettlementOpReason.ValueType  # 9
TLM_GLOBAL_MINT_REIMBURSEMENT_REQUEST_ESCROW_DAO_TRANSFER: SettlementOpReason.ValueType  # 10
"""Self-servicing mitigation"""
UNSPECIFIED_TLM_SUPPLIER_SLASH_MODULE_TRANSFER: SettlementOpReason.ValueType  # 11
"""Penalization"""
UNSPECIFIED_TLM_SUPPLIER_SLASH_STAKE_BURN: SettlementOpReason.ValueType  # 12
TLM_GLOBAL_MINT_SUPPLIER_SHAREHOLDER_REWARD_MODULE_TRANSFER: SettlementOpReason.ValueType  # 13
"""Module accounting"""
TLM_GLOBAL_MINT_REIMBURSEMENT_REQUEST_ESCROW_MODULE_TRANSFER: SettlementOpReason.ValueType  # 14
global___SettlementOpReason = SettlementOpReason

@typing.final
class ClaimSettlementResult(google.protobuf.message.Message):
    """SettlementResult holds mint, burn, and transfer operations that result from a single claim settlement."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLAIM_FIELD_NUMBER: builtins.int
    MINTS_FIELD_NUMBER: builtins.int
    BURNS_FIELD_NUMBER: builtins.int
    MOD_TO_MOD_TRANSFERS_FIELD_NUMBER: builtins.int
    MOD_TO_ACCT_TRANSFERS_FIELD_NUMBER: builtins.int
    @property
    def claim(self) -> poktroll.proof.types_pb2.Claim: ...
    @property
    def mints(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MintBurnOp]: ...
    @property
    def burns(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MintBurnOp]: ...
    @property
    def mod_to_mod_transfers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ModToModTransfer]: ...
    @property
    def mod_to_acct_transfers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ModToAcctTransfer]: ...
    def __init__(
        self,
        *,
        claim: poktroll.proof.types_pb2.Claim | None = ...,
        mints: collections.abc.Iterable[global___MintBurnOp] | None = ...,
        burns: collections.abc.Iterable[global___MintBurnOp] | None = ...,
        mod_to_mod_transfers: collections.abc.Iterable[global___ModToModTransfer] | None = ...,
        mod_to_acct_transfers: collections.abc.Iterable[global___ModToAcctTransfer] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["claim", b"claim"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["burns", b"burns", "claim", b"claim", "mints", b"mints", "mod_to_acct_transfers", b"mod_to_acct_transfers", "mod_to_mod_transfers", b"mod_to_mod_transfers"]) -> None: ...

global___ClaimSettlementResult = ClaimSettlementResult

@typing.final
class MintBurnOp(google.protobuf.message.Message):
    """MintBurnOperation holds the parameters of a mint or burn operation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OP_REASON_FIELD_NUMBER: builtins.int
    DESTINATIONMODULE_FIELD_NUMBER: builtins.int
    COIN_FIELD_NUMBER: builtins.int
    op_reason: global___SettlementOpReason.ValueType
    DestinationModule: builtins.str
    @property
    def coin(self) -> cosmos.base.v1beta1.coin_pb2.Coin: ...
    def __init__(
        self,
        *,
        op_reason: global___SettlementOpReason.ValueType = ...,
        DestinationModule: builtins.str = ...,
        coin: cosmos.base.v1beta1.coin_pb2.Coin | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["coin", b"coin"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["DestinationModule", b"DestinationModule", "coin", b"coin", "op_reason", b"op_reason"]) -> None: ...

global___MintBurnOp = MintBurnOp

@typing.final
class ModToAcctTransfer(google.protobuf.message.Message):
    """ModToAcctTransfer holds the parameters of a module to account transfer operation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OP_REASON_FIELD_NUMBER: builtins.int
    SENDERMODULE_FIELD_NUMBER: builtins.int
    RECIPIENTADDRESS_FIELD_NUMBER: builtins.int
    COIN_FIELD_NUMBER: builtins.int
    op_reason: global___SettlementOpReason.ValueType
    SenderModule: builtins.str
    RecipientAddress: builtins.str
    """bech32 address"""
    @property
    def coin(self) -> cosmos.base.v1beta1.coin_pb2.Coin: ...
    def __init__(
        self,
        *,
        op_reason: global___SettlementOpReason.ValueType = ...,
        SenderModule: builtins.str = ...,
        RecipientAddress: builtins.str = ...,
        coin: cosmos.base.v1beta1.coin_pb2.Coin | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["coin", b"coin"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["RecipientAddress", b"RecipientAddress", "SenderModule", b"SenderModule", "coin", b"coin", "op_reason", b"op_reason"]) -> None: ...

global___ModToAcctTransfer = ModToAcctTransfer

@typing.final
class ModToModTransfer(google.protobuf.message.Message):
    """ModToModTransfer holds the parameters of a module to module transfer operation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OP_REASON_FIELD_NUMBER: builtins.int
    SENDERMODULE_FIELD_NUMBER: builtins.int
    RECIPIENTMODULE_FIELD_NUMBER: builtins.int
    COIN_FIELD_NUMBER: builtins.int
    op_reason: global___SettlementOpReason.ValueType
    SenderModule: builtins.str
    RecipientModule: builtins.str
    """This the semantic module named that can be found by searching for "ModuleName =" in the codebase"""
    @property
    def coin(self) -> cosmos.base.v1beta1.coin_pb2.Coin: ...
    def __init__(
        self,
        *,
        op_reason: global___SettlementOpReason.ValueType = ...,
        SenderModule: builtins.str = ...,
        RecipientModule: builtins.str = ...,
        coin: cosmos.base.v1beta1.coin_pb2.Coin | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["coin", b"coin"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["RecipientModule", b"RecipientModule", "SenderModule", b"SenderModule", "coin", b"coin", "op_reason", b"op_reason"]) -> None: ...

global___ModToModTransfer = ModToModTransfer
