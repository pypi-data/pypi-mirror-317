"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import cosmos.base.v1beta1.coin_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import poktroll.shared.service_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Supplier(google.protobuf.message.Message):
    """Supplier is the type defining the actor in Pocket Network that provides RPC services."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class ServicesActivationHeightsMapEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.int
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    OWNER_ADDRESS_FIELD_NUMBER: builtins.int
    OPERATOR_ADDRESS_FIELD_NUMBER: builtins.int
    STAKE_FIELD_NUMBER: builtins.int
    SERVICES_FIELD_NUMBER: builtins.int
    UNSTAKE_SESSION_END_HEIGHT_FIELD_NUMBER: builtins.int
    SERVICES_ACTIVATION_HEIGHTS_MAP_FIELD_NUMBER: builtins.int
    owner_address: builtins.str
    """The address of the owner (i.e. staker, custodial) that owns the funds for staking.
    By default, this address is the one that receives all the rewards unless owtherwise specified.
    This property cannot be updated by the operator.
    Bech32 cosmos address
    """
    operator_address: builtins.str
    """The operator address of the supplier operator (i.e. the one managing the off-chain server).
    The operator address can update the supplier's configurations excluding the owner address.
    This property does not change over the supplier's lifespan, the supplier must be unstaked
    and re-staked to effectively update this value.
    Bech32 cosmos address
    """
    unstake_session_end_height: builtins.int
    """The session end height at which an actively unbonding supplier unbonds its stake.
    If the supplier did not unstake, this value will be 0.
    """
    @property
    def stake(self) -> cosmos.base.v1beta1.coin_pb2.Coin:
        """The total amount of uPOKT the supplier has staked"""

    @property
    def services(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[poktroll.shared.service_pb2.SupplierServiceConfig]:
        """The service configs this supplier can support"""

    @property
    def services_activation_heights_map(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.int]:
        """services_activation_heights_map is a map of serviceIds to the height at
        which the staked supplier will become active for that service.
        Activation heights are session start heights.
        """

    def __init__(
        self,
        *,
        owner_address: builtins.str = ...,
        operator_address: builtins.str = ...,
        stake: cosmos.base.v1beta1.coin_pb2.Coin | None = ...,
        services: collections.abc.Iterable[poktroll.shared.service_pb2.SupplierServiceConfig] | None = ...,
        unstake_session_end_height: builtins.int = ...,
        services_activation_heights_map: collections.abc.Mapping[builtins.str, builtins.int] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["stake", b"stake"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["operator_address", b"operator_address", "owner_address", b"owner_address", "services", b"services", "services_activation_heights_map", b"services_activation_heights_map", "stake", b"stake", "unstake_session_end_height", b"unstake_session_end_height"]) -> None: ...

global___Supplier = Supplier
