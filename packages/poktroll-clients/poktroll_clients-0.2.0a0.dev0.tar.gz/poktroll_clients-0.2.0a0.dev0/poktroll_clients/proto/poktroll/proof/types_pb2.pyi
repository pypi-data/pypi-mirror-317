"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
TODO_AUTOMATE: Add a CI workflow which detects .proto files with incompatible names (i.e. same as the package).
NB: This file CANNOT be named "application.proto" due to an as of yet unidentified
issue in how cosmos-proto generates the pulsar plugin output go source code.
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import poktroll.session.types_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _ProofRequirementReason:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ProofRequirementReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ProofRequirementReason.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    NOT_REQUIRED: _ProofRequirementReason.ValueType  # 0
    PROBABILISTIC: _ProofRequirementReason.ValueType  # 1
    THRESHOLD: _ProofRequirementReason.ValueType  # 2

class ProofRequirementReason(_ProofRequirementReason, metaclass=_ProofRequirementReasonEnumTypeWrapper): ...

NOT_REQUIRED: ProofRequirementReason.ValueType  # 0
PROBABILISTIC: ProofRequirementReason.ValueType  # 1
THRESHOLD: ProofRequirementReason.ValueType  # 2
global___ProofRequirementReason = ProofRequirementReason

class _ClaimProofStage:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ClaimProofStageEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ClaimProofStage.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    CLAIMED: _ClaimProofStage.ValueType  # 0
    PROVEN: _ClaimProofStage.ValueType  # 1
    SETTLED: _ClaimProofStage.ValueType  # 2
    EXPIRED: _ClaimProofStage.ValueType  # 3

class ClaimProofStage(_ClaimProofStage, metaclass=_ClaimProofStageEnumTypeWrapper): ...

CLAIMED: ClaimProofStage.ValueType  # 0
PROVEN: ClaimProofStage.ValueType  # 1
SETTLED: ClaimProofStage.ValueType  # 2
EXPIRED: ClaimProofStage.ValueType  # 3
global___ClaimProofStage = ClaimProofStage

@typing.final
class Proof(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUPPLIER_OPERATOR_ADDRESS_FIELD_NUMBER: builtins.int
    SESSION_HEADER_FIELD_NUMBER: builtins.int
    CLOSEST_MERKLE_PROOF_FIELD_NUMBER: builtins.int
    supplier_operator_address: builtins.str
    """Address of the supplier's operator that submitted this proof."""
    closest_merkle_proof: builtins.bytes
    """The serialized SMST compacted proof from the `#ClosestProof()` method."""
    @property
    def session_header(self) -> poktroll.session.types_pb2.SessionHeader:
        """The session header of the session that this claim is for."""

    def __init__(
        self,
        *,
        supplier_operator_address: builtins.str = ...,
        session_header: poktroll.session.types_pb2.SessionHeader | None = ...,
        closest_merkle_proof: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["session_header", b"session_header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["closest_merkle_proof", b"closest_merkle_proof", "session_header", b"session_header", "supplier_operator_address", b"supplier_operator_address"]) -> None: ...

global___Proof = Proof

@typing.final
class Claim(google.protobuf.message.Message):
    """Claim is the serialized object stored on-chain for claims pending to be proven"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUPPLIER_OPERATOR_ADDRESS_FIELD_NUMBER: builtins.int
    SESSION_HEADER_FIELD_NUMBER: builtins.int
    ROOT_HASH_FIELD_NUMBER: builtins.int
    supplier_operator_address: builtins.str
    """the address of the supplier's operator that submitted this claim"""
    root_hash: builtins.bytes
    """Root hash returned from smt.SMST#Root()."""
    @property
    def session_header(self) -> poktroll.session.types_pb2.SessionHeader:
        """The session header of the session that this claim is for."""

    def __init__(
        self,
        *,
        supplier_operator_address: builtins.str = ...,
        session_header: poktroll.session.types_pb2.SessionHeader | None = ...,
        root_hash: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["session_header", b"session_header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["root_hash", b"root_hash", "session_header", b"session_header", "supplier_operator_address", b"supplier_operator_address"]) -> None: ...

global___Claim = Claim
