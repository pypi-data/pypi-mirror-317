Metadata-Version: 2.1
Name: enem
Version: 1.0.3
Summary: CLI Tool for ENEM PDF Extraction and JSON Export.
Home-page: https://github.com/luiisp/enem-extractor
Author: Pedro Luis Dias
Author-email: luisp.diias@gmail.com
License: MIT
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pygments
Requires-Dist: colorama
Requires-Dist: pillow
Requires-Dist: PyMuPDF


# Enem Extractor

[![en](https://img.shields.io/badge/lang-en-red.svg)](https://github.com/luiisp/enem-extractor/blob/master/README.en.md)
<a href="https://pypi.python.org/pypi/enem" target="_blank"><img src="https://img.shields.io/pypi/v/enem.svg?color=3399EE" alt="PyPI version" /></a>

 [English version](https://github.com/luiisp/enem-extractor/blob/master/README.en.md)


> ‚≠ê Star this project to support!



**Enem Extractor** √© uma ferramenta que extrai automaticamente quest√µes de provas do ENEM (ou de provas semelhantes) e as converte em formatos como JSON.

üèì [Veja uma prova extraida pelo Enem Extractor no mundo real aqui](https://luiisp.github.io/enem-extractor/)


## üöÄ Rodando

> Para rodar esse projeto voc√™ precisa ter o Python e o pip instalados. [Voc√™ pode baixar o Python aqui](https://www.python.org/downloads/).

### 1. Instale o Enem Extractor

> Para rodar o **Enem Extractor** via `pip`, execute o seguinte comando no terminal:

```bash
pip install enem
```

### 2. Extraia uma prova

Ap√≥s a instala√ß√£o, voc√™ pode extrair quest√µes de uma prova em formato PDF. Supondo que voc√™ tenha um arquivo de prova do ENEM chamado `prova.pdf` no mesmo diret√≥rio, basta rodar:

```bash
enem prova.pdf
```

O script ir√° analisar a prova e extrair as quest√µes, gerando uma pasta com um arquivo de sa√≠da em JSON com os dados extra√≠dos e outros assets da prova. [Veja mais detalhes da sa√≠da do comando aqui](#saida).

### 3. Par√¢metros adicionais

Voc√™ pode fornecer par√¢metros adicionais para personalizar o processo de extra√ß√£o:

- `-f` ou `--file`: Caminho para o arquivo PDF da prova. (obrigat√≥rio)
- `-k` ou `--key`: Caminho para o arquivo PDF do gabarito. (opcional)
- `-o` ou `--output`: Caminho onde a pasta dos arquivos extra√≠dos ser√° criada. (opcional)

Exemplo de uso com par√¢metros:

```bash
enem -f prova.pdf -k gabarito.pdf -o C:\documents
```

Este comando ir√° extrair as quest√µes da prova `prova.pdf`, corrigir com o gabarito `gabarito.pdf` e salvar a pasta dos resultados em `C:\documents`.

## Sa√≠da

 **[Aprenda sobre as sa√≠das que da extra√ß√£o clicando aqui.](examples/output_example/readme.md)**

<img src="https://github.com/user-attachments/assets/9e78b4f0-2055-4f32-a9c5-1bc3e96a2fdc" alt="demo_enem" width="350"/>



## üîß Como Contribuir

1. Fa√ßa um fork deste reposit√≥rio.
2. Crie uma branch para a sua modifica√ß√£o (`git checkout -b feature/nova-funcionalidade`).
3. Fa√ßa suas altera√ß√µes e commit (`git commit -am 'Adiciona nova funcionalidade'`).
4. Envie para o reposit√≥rio original (`git push origin feature/nova-funcionalidade`).
5. Crie um novo Pull Request.

## üìú Licen√ßa

Este projeto est√° licenciado sob a Licen√ßa MIT - veja o arquivo [LICENSE](LICENSE) para mais detalhes.

## üìö Links √öteis

- [Documenta√ß√£o do PyMuPDF](https://pypi.org/project/PyMuPDF/)
- [Reposit√≥rio](https://github.com/luiisp/enem-extractor)
- [English version of README](https://github.com/luiisp/enem-extractor/blob/master/README.en.md)

---

### üì¢ Issues

Caso voc√™ tenha alguma d√∫vida, queira sugerir melhorias ou encontre problemas, fique √† vontade para [abrir um issue](https://github.com/luiisp/enem-extractor/issues).

### üåÄ Subdepend√™ncias 

- [PyMuPDF](https://pypi.org/project/PyMuPDF/) - PDF parsing 
- [Pillow](https://pypi.org/project/Pillow/) - Image processing 
- [Colorama](https://pypi.org/project/colorama/) - Terminal colors 


Created with ‚ù§Ô∏è by [Pedro L. Dias](https://github.com/luiisp)
