name: Publish python distribution to Pypi
run-name: Github workflow by ${{ github.triggering_actor}}

on:
  push:
  pull_request:
      branches:
          - main
      types: [closed]

jobs:
    tests-linters:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: tests and linters
              uses: ./.github/actions/lint_test_action

    test-installation:
      strategy:
        matrix:
          os: [ubuntu-latest,macos-latest, windows-latest]
          python-version: ["3.10", "3.11", "3.12", "3.13"]
      runs-on: ${{ matrix.os }}
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Check installation across different Python versions
          uses: ./.github/actions/check_installation
            
    publish-to-pypi:
        needs: 
          - tests-linters
          - test-installation
        if: github.event_name == 'pull_request' && github.event.action == 'closed'
        runs-on: ubuntu-latest
        environment:
            name: pypi
            url: https://pypi.org/p/pip-help

        permissions:
            id-token: write

        steps:
          - name: Checkout code
            uses: actions/checkout@v4
          - name: Set up UV
            uses: astral-sh/setup-uv@v4
            with:
              python-version: "3.13"
          - name: Build a binary wheel and a source tarball
            run: |
                uv build .
          - name: Store the distribution packages
            uses: actions/upload-artifact@v4
            with:
              name: python-package-distributions
              path: dist/
          - name: Download distribution
            uses: actions/download-artifact@v4
            with:
                name: python-package-distributions
                path: dist/
          - name: Publish distribution to PyPI
            uses: pypa/gh-action-pypi-publish@release/v1

    github-release:
      name: >-
        Sign the Python distribution with Sigstore
        and upload them to GitHub Release
      needs:
      - publish-to-pypi
      if: github.event_name == 'pull_request' && github.event.action == 'closed'
      runs-on: ubuntu-latest

      permissions:
        contents: write  # IMPORTANT: mandatory for making GitHub Releases
        id-token: write  # IMPORTANT: mandatory for sigstore

      steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        
        # Make sure the release is created on the main branch\
        # and release version is set manually
        run: >-
          gh release create
          v1.0.3.1
          # --repo '${{ github.repository }}'
          # --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: >-
          gh release upload
          # '${{ github.ref_name }}' 
          v1.0.2 dist/**
          --repo '${{ github.repository }}'
